{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from \"react\";\nimport { useDateSelect } from \"./use-date-select\"; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nvar DateSelect = React.forwardRef(function (props, ref) {\n  // Ref is forwarded, but it is intended to be used with react-hook-form's <Controller /> to focus the input when error occurs.\n  // This component is still controlled even if ref is here.\n  var onChange = props.onChange,\n      value = props.value,\n      opts = __rest(props, [\"onChange\", \"value\"]);\n\n  var dateSelectProps = useDateSelect(value, onChange, opts);\n  return props.render(Object.assign(Object.assign({}, dateSelectProps), {\n    ref: ref\n  }));\n});\nDateSelect.displayName = \"DateSelect\";\nexport default DateSelect;","map":null,"metadata":{},"sourceType":"module"}