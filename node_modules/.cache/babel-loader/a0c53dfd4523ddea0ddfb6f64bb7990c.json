{"ast":null,"code":"import _classCallCheck from \"/Users/s.gollapalli/Desktop/project/b20-master-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/s.gollapalli/Desktop/project/b20-master-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _slicedToArray from \"/Users/s.gollapalli/Desktop/project/b20-master-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/s.gollapalli/Desktop/project/b20-master-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { useSelectableItem as $8kq0t$useSelectableItem, useSelectableCollection as $8kq0t$useSelectableCollection } from \"@react-aria/selection\";\nimport { getFocusableTreeWalker as $8kq0t$getFocusableTreeWalker } from \"@react-aria/focus\";\nimport { useLayoutEffect as $8kq0t$useLayoutEffect, useLabels as $8kq0t$useLabels, mergeProps as $8kq0t$mergeProps, useId as $8kq0t$useId } from \"@react-aria/utils\";\nimport { useState as $8kq0t$useState, useMemo as $8kq0t$useMemo } from \"react\";\nimport { useLocale as $8kq0t$useLocale } from \"@react-aria/i18n\";\nvar $99b62ae3ff97ec45$export$c5f62239608282b6 = new WeakMap();\n\nfunction $99b62ae3ff97ec45$export$567fc7097e064344(state, key, role) {\n  if (typeof key === 'string') key = key.replace(/\\s+/g, '');\n  var baseId = $99b62ae3ff97ec45$export$c5f62239608282b6.get(state);\n  return \"\".concat(baseId, \"-\").concat(role, \"-\").concat(key);\n}\n\nfunction $0175d55c2a017ebc$export$fdf4756d5b8ef90a(props, state, ref) {\n  var key = props.key,\n      propsDisabled = props.isDisabled;\n  var manager = state.selectionManager,\n      selectedKey = state.selectedKey;\n  var isSelected = key === selectedKey;\n  var isDisabled = propsDisabled || state.isDisabled || state.disabledKeys.has(key);\n\n  var _$8kq0t$useSelectable = $8kq0t$useSelectableItem({\n    selectionManager: manager,\n    key: key,\n    ref: ref,\n    isDisabled: isDisabled\n  }),\n      itemProps = _$8kq0t$useSelectable.itemProps;\n\n  var tabId = $99b62ae3ff97ec45$export$567fc7097e064344(state, key, 'tab');\n  var tabPanelId = $99b62ae3ff97ec45$export$567fc7097e064344(state, key, 'tabpanel');\n  var tabIndex = itemProps.tabIndex;\n  return {\n    tabProps: _objectSpread({}, itemProps, {\n      id: tabId,\n      'aria-selected': isSelected,\n      'aria-disabled': isDisabled || undefined,\n      'aria-controls': isSelected ? tabPanelId : undefined,\n      tabIndex: isDisabled ? undefined : tabIndex,\n      role: 'tab'\n    }),\n    isSelected: isSelected,\n    isDisabled: isDisabled\n  };\n}\n\nfunction $34bce698202e07cb$export$fae0121b5afe572d(props, state, ref) {\n  var _$8kq0t$useState = $8kq0t$useState(0),\n      _$8kq0t$useState2 = _slicedToArray(_$8kq0t$useState, 2),\n      tabIndex = _$8kq0t$useState2[0],\n      setTabIndex = _$8kq0t$useState2[1]; // The tabpanel should have tabIndex=0 when there are no tabbable elements within it.\n  // Otherwise, tabbing from the focused tab should go directly to the first tabbable element\n  // within the tabpanel.\n\n\n  $8kq0t$useLayoutEffect(function () {\n    if (ref === null || ref === void 0 ? void 0 : ref.current) {\n      var update = function update() {\n        // Detect if there are any tabbable elements and update the tabIndex accordingly.\n        var walker = $8kq0t$getFocusableTreeWalker(ref.current, {\n          tabbable: true\n        });\n        setTabIndex(walker.nextNode() ? undefined : 0);\n      };\n\n      update(); // Update when new elements are inserted, or the tabIndex/disabled attribute updates.\n\n      var observer = new MutationObserver(update);\n      observer.observe(ref.current, {\n        subtree: true,\n        childList: true,\n        attributes: true,\n        attributeFilter: ['tabIndex', 'disabled']\n      });\n      return function () {\n        observer.disconnect();\n      };\n    }\n  }, [ref]);\n  var id = $99b62ae3ff97ec45$export$567fc7097e064344(state, state === null || state === void 0 ? void 0 : state.selectedKey, 'tabpanel');\n  var tabPanelProps = $8kq0t$useLabels(_objectSpread({}, props, {\n    id: id,\n    'aria-labelledby': $99b62ae3ff97ec45$export$567fc7097e064344(state, state === null || state === void 0 ? void 0 : state.selectedKey, 'tab')\n  }));\n  return {\n    tabPanelProps: $8kq0t$mergeProps(tabPanelProps, {\n      tabIndex: tabIndex,\n      role: 'tabpanel',\n      'aria-describedby': props['aria-describedby'],\n      'aria-details': props['aria-details']\n    })\n  };\n}\n\nvar $bfc6f2d60b8a4c40$export$15010ca3c1abe90b = /*#__PURE__*/function () {\n  _createClass($bfc6f2d60b8a4c40$export$15010ca3c1abe90b, [{\n    key: \"getKeyLeftOf\",\n    value: function getKeyLeftOf(key) {\n      if (this.flipDirection) return this.getNextKey(key);else {\n        if (this.orientation === 'horizontal') return this.getPreviousKey(key);\n        return null;\n      }\n    }\n  }, {\n    key: \"getKeyRightOf\",\n    value: function getKeyRightOf(key) {\n      if (this.flipDirection) return this.getPreviousKey(key);else {\n        if (this.orientation === 'horizontal') return this.getNextKey(key);\n        return null;\n      }\n    }\n  }, {\n    key: \"getKeyAbove\",\n    value: function getKeyAbove(key) {\n      if (this.orientation === 'vertical') return this.getPreviousKey(key);\n      return null;\n    }\n  }, {\n    key: \"getKeyBelow\",\n    value: function getKeyBelow(key) {\n      if (this.orientation === 'vertical') return this.getNextKey(key);\n      return null;\n    }\n  }, {\n    key: \"getFirstKey\",\n    value: function getFirstKey() {\n      var key = this.collection.getFirstKey();\n      if (this.disabledKeys.has(key)) key = this.getNextKey(key);\n      return key;\n    }\n  }, {\n    key: \"getLastKey\",\n    value: function getLastKey() {\n      var key = this.collection.getLastKey();\n      if (this.disabledKeys.has(key)) key = this.getPreviousKey(key);\n      return key;\n    }\n  }, {\n    key: \"getNextKey\",\n    value: function getNextKey(key) {\n      do {\n        key = this.collection.getKeyAfter(key);\n        if (key == null) key = this.collection.getFirstKey();\n      } while (this.disabledKeys.has(key));\n\n      return key;\n    }\n  }, {\n    key: \"getPreviousKey\",\n    value: function getPreviousKey(key) {\n      do {\n        key = this.collection.getKeyBefore(key);\n        if (key == null) key = this.collection.getLastKey();\n      } while (this.disabledKeys.has(key));\n\n      return key;\n    }\n  }]);\n\n  function $bfc6f2d60b8a4c40$export$15010ca3c1abe90b(collection, direction, orientation) {\n    var disabledKeys = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Set();\n\n    _classCallCheck(this, $bfc6f2d60b8a4c40$export$15010ca3c1abe90b);\n\n    this.collection = collection;\n    this.flipDirection = direction === 'rtl' && orientation === 'horizontal';\n    this.orientation = orientation;\n    this.disabledKeys = disabledKeys;\n  }\n\n  return $bfc6f2d60b8a4c40$export$15010ca3c1abe90b;\n}();\n\nfunction $58d314389b21fa3f$export$773e389e644c5874(props, state, ref) {\n  var _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$keyboardActiva = props.keyboardActivation,\n      keyboardActivation = _props$keyboardActiva === void 0 ? 'automatic' : _props$keyboardActiva;\n  var collection = state.collection,\n      manager = state.selectionManager,\n      disabledKeys = state.disabledKeys;\n\n  var _$8kq0t$useLocale = $8kq0t$useLocale(),\n      direction = _$8kq0t$useLocale.direction;\n\n  var delegate = $8kq0t$useMemo(function () {\n    return new $bfc6f2d60b8a4c40$export$15010ca3c1abe90b(collection, direction, orientation, disabledKeys);\n  }, [collection, disabledKeys, orientation, direction]);\n\n  var _$8kq0t$useSelectable2 = $8kq0t$useSelectableCollection({\n    ref: ref,\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    selectOnFocus: keyboardActivation === 'automatic',\n    disallowEmptySelection: true,\n    scrollRef: ref\n  }),\n      collectionProps = _$8kq0t$useSelectable2.collectionProps; // Compute base id for all tabs\n\n\n  var tabsId = $8kq0t$useId();\n  $99b62ae3ff97ec45$export$c5f62239608282b6.set(state, tabsId);\n  var tabListLabelProps = $8kq0t$useLabels(_objectSpread({}, props, {\n    id: tabsId\n  }));\n  return {\n    tabListProps: _objectSpread({}, $8kq0t$mergeProps(collectionProps, tabListLabelProps), {\n      role: 'tablist',\n      'aria-orientation': orientation,\n      tabIndex: undefined\n    })\n  };\n}\n\nexport { $0175d55c2a017ebc$export$fdf4756d5b8ef90a as useTab, $34bce698202e07cb$export$fae0121b5afe572d as useTabPanel, $58d314389b21fa3f$export$773e389e644c5874 as useTabList };","map":null,"metadata":{},"sourceType":"module"}