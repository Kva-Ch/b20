{"ast":null,"code":"var _jsxFileName = \"/Users/k.chaganti/Desktop/b20/b20/src/components/dashboard/TaskMeter.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useMeter } from 'react-aria';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskMeter(props) {\n  _s();\n\n  let {\n    label,\n    showValueLabel = !!label,\n    value,\n    minValue = 0,\n    maxValue = 100\n  } = props;\n  let {\n    meterProps,\n    labelProps\n  } = useMeter(props); // Calculate the width of the progress bar as a percentage\n\n  let percentage = (value - minValue) / (maxValue - minValue);\n  let barWidth = `${Math.round(percentage * 100)}%`;\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...meterProps,\n    style: {\n      width: 400\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [label && /*#__PURE__*/_jsxDEV(\"span\", { ...labelProps,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }, this), showValueLabel && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: meterProps['aria-valuetext']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '30px',\n        background: 'lightgray'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: barWidth,\n          height: '30px',\n          background: '#000000'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 11\n  }, this);\n}\n\n_s(TaskMeter, \"O3nvGPOrBazEzeHIUAgYDBwWczg=\", false, function () {\n  return [useMeter];\n});\n\n_c = TaskMeter;\nexport default TaskMeter;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskMeter\");","map":{"version":3,"names":["React","useMeter","TaskMeter","props","label","showValueLabel","value","minValue","maxValue","meterProps","labelProps","percentage","barWidth","Math","round","width","display","justifyContent","height","background"],"sources":["/Users/k.chaganti/Desktop/b20/b20/src/components/dashboard/TaskMeter.jsx"],"sourcesContent":["import React from 'react';\nimport {useMeter} from 'react-aria';\n\nfunction TaskMeter(props) {\n\n  let {\n    label,\n    showValueLabel = !!label,\n    value,\n    minValue = 0,\n    maxValue = 100\n  } = props;\n  let {meterProps, labelProps} = useMeter(props);\n\n  // Calculate the width of the progress bar as a percentage\n  let percentage = (value - minValue) / (maxValue - minValue);\n  let barWidth = `${Math.round(percentage * 100)}%`;\n\n  return (<div {...meterProps} style={{\n      width: 400\n    }}>\n    <div style={{\n        display: 'flex',\n        justifyContent: 'space-between'\n      }}>\n      {\n        label && (<span {...labelProps}>\n          {label}\n        </span>)\n      }\n      {\n        showValueLabel && (<span>\n          {meterProps['aria-valuetext']}\n        </span>)\n      }\n    </div>\n    <div style={{\n        height: '30px',\n        background: 'lightgray'\n      }}>\n      <div style={{\n          width: barWidth,\n          height: '30px',\n          background: '#000000'\n        }}/>\n    </div>\n\n  </div>);\n}\n\nexport default TaskMeter;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,YAAvB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EAAA;;EAExB,IAAI;IACFC,KADE;IAEFC,cAAc,GAAG,CAAC,CAACD,KAFjB;IAGFE,KAHE;IAIFC,QAAQ,GAAG,CAJT;IAKFC,QAAQ,GAAG;EALT,IAMAL,KANJ;EAOA,IAAI;IAACM,UAAD;IAAaC;EAAb,IAA2BT,QAAQ,CAACE,KAAD,CAAvC,CATwB,CAWxB;;EACA,IAAIQ,UAAU,GAAG,CAACL,KAAK,GAAGC,QAAT,KAAsBC,QAAQ,GAAGD,QAAjC,CAAjB;EACA,IAAIK,QAAQ,GAAI,GAAEC,IAAI,CAACC,KAAL,CAAWH,UAAU,GAAG,GAAxB,CAA6B,GAA/C;EAEA,oBAAQ,oBAASF,UAAT;IAAqB,KAAK,EAAE;MAChCM,KAAK,EAAE;IADyB,CAA5B;IAAA,wBAGN;MAAK,KAAK,EAAE;QACRC,OAAO,EAAE,MADD;QAERC,cAAc,EAAE;MAFR,CAAZ;MAAA,WAKIb,KAAK,iBAAK,qBAAUM,UAAV;QAAA,UACPN;MADO;QAAA;QAAA;QAAA;MAAA,QALd,EAUIC,cAAc,iBAAK;QAAA,UAChBI,UAAU,CAAC,gBAAD;MADM;QAAA;QAAA;QAAA;MAAA,QAVvB;IAAA;MAAA;MAAA;MAAA;IAAA,QAHM,eAkBN;MAAK,KAAK,EAAE;QACRS,MAAM,EAAE,MADA;QAERC,UAAU,EAAE;MAFJ,CAAZ;MAAA,uBAIE;QAAK,KAAK,EAAE;UACRJ,KAAK,EAAEH,QADC;UAERM,MAAM,EAAE,MAFA;UAGRC,UAAU,EAAE;QAHJ;MAAZ;QAAA;QAAA;QAAA;MAAA;IAJF;MAAA;MAAA;MAAA;IAAA,QAlBM;EAAA;IAAA;IAAA;IAAA;EAAA,QAAR;AA8BD;;GA7CQjB,S;UASwBD,Q;;;KATxBC,S;AA+CT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}