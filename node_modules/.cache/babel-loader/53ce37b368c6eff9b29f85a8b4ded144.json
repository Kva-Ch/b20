{"ast":null,"code":"import { createFocusManager as $cIPI0$createFocusManager, getFocusableTreeWalker as $cIPI0$getFocusableTreeWalker } from \"@react-aria/focus\";\nimport { useId as $cIPI0$useId, useDescription as $cIPI0$useDescription, filterDOMProps as $cIPI0$filterDOMProps, mergeProps as $cIPI0$mergeProps, isMac as $cIPI0$isMac, scrollIntoView as $cIPI0$scrollIntoView, getScrollParent as $cIPI0$getScrollParent, useEvent as $cIPI0$useEvent, useLayoutEffect as $cIPI0$useLayoutEffect, isIOS as $cIPI0$isIOS, useLabels as $cIPI0$useLabels } from \"@react-aria/utils\";\nimport $cIPI0$react, { useMemo as $cIPI0$useMemo, useRef as $cIPI0$useRef, useEffect as $cIPI0$useEffect } from \"react\";\nimport { useField as $cIPI0$useField } from \"@react-aria/label\";\nimport { useLocalizedStringFormatter as $cIPI0$useLocalizedStringFormatter, useLocale as $cIPI0$useLocale, useDateFormatter as $cIPI0$useDateFormatter, useFilter as $cIPI0$useFilter } from \"@react-aria/i18n\";\nimport { useFocusWithin as $cIPI0$useFocusWithin, usePress as $cIPI0$usePress } from \"@react-aria/interactions\";\nimport { toCalendar as $cIPI0$toCalendar, CalendarDate as $cIPI0$CalendarDate } from \"@internationalized/date\";\nimport { NumberParser as $cIPI0$NumberParser } from \"@internationalized/number\";\nimport { useSpinButton as $cIPI0$useSpinButton } from \"@react-aria/spinbutton\";\nimport { LocalizedStringDictionary as $cIPI0$LocalizedStringDictionary } from \"@internationalized/string\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nvar $204383cf4f6b0d06$exports = {};\nvar $f23889fffbde9058$exports = {};\n$f23889fffbde9058$exports = {\n  \"calendar\": `التقويم`,\n  \"day\": `يوم`,\n  \"dayPeriod\": `ص/م`,\n  \"endDate\": `تاريخ الانتهاء`,\n  \"era\": `العصر`,\n  \"hour\": `الساعات`,\n  \"minute\": `الدقائق`,\n  \"month\": `الشهر`,\n  \"second\": `الثواني`,\n  \"selectedDateDescription\": args => `تاريخ محدد: ${args.date}`,\n  \"selectedRangeDescription\": args => `المدى الزمني المحدد: ${args.startDate} إلى ${args.endDate}`,\n  \"selectedTimeDescription\": args => `الوقت المحدد: ${args.time}`,\n  \"startDate\": `تاريخ البدء`,\n  \"timeZoneName\": `التوقيت`,\n  \"weekday\": `اليوم`,\n  \"year\": `السنة`\n};\nvar $09d9badaa8903929$exports = {};\n$09d9badaa8903929$exports = {\n  \"calendar\": `Календар`,\n  \"day\": `ден`,\n  \"dayPeriod\": `пр.об./сл.об.`,\n  \"endDate\": `Крайна дата`,\n  \"era\": `ера`,\n  \"hour\": `час`,\n  \"minute\": `минута`,\n  \"month\": `месец`,\n  \"second\": `секунда`,\n  \"selectedDateDescription\": args => `Избрана дата: ${args.date}`,\n  \"selectedRangeDescription\": args => `Избран диапазон: ${args.startDate} до ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Избрано време: ${args.time}`,\n  \"startDate\": `Начална дата`,\n  \"timeZoneName\": `часова зона`,\n  \"weekday\": `ден от седмицата`,\n  \"year\": `година`\n};\nvar $151b77e0fd711730$exports = {};\n$151b77e0fd711730$exports = {\n  \"calendar\": `Kalendář`,\n  \"day\": `den`,\n  \"dayPeriod\": `část dne`,\n  \"endDate\": `Konečné datum`,\n  \"era\": `letopočet`,\n  \"hour\": `hodina`,\n  \"minute\": `minuta`,\n  \"month\": `měsíc`,\n  \"second\": `sekunda`,\n  \"selectedDateDescription\": args => `Vybrané datum: ${args.date}`,\n  \"selectedRangeDescription\": args => `Vybrané období: ${args.startDate} až ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Vybraný čas: ${args.time}`,\n  \"startDate\": `Počáteční datum`,\n  \"timeZoneName\": `časové pásmo`,\n  \"weekday\": `den v týdnu`,\n  \"year\": `rok`\n};\nvar $61915aa8630b90a2$exports = {};\n$61915aa8630b90a2$exports = {\n  \"calendar\": `Kalender`,\n  \"day\": `dag`,\n  \"dayPeriod\": `AM/PM`,\n  \"endDate\": `Slutdato`,\n  \"era\": `æra`,\n  \"hour\": `time`,\n  \"minute\": `minut`,\n  \"month\": `måned`,\n  \"second\": `sekund`,\n  \"selectedDateDescription\": args => `Valgt dato: ${args.date}`,\n  \"selectedRangeDescription\": args => `Valgt interval: ${args.startDate} til ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Valgt tidspunkt: ${args.time}`,\n  \"startDate\": `Startdato`,\n  \"timeZoneName\": `tidszone`,\n  \"weekday\": `ugedag`,\n  \"year\": `år`\n};\nvar $35cea00159787840$exports = {};\n$35cea00159787840$exports = {\n  \"calendar\": `Kalender`,\n  \"day\": `Tag`,\n  \"dayPeriod\": `Tageshälfte`,\n  \"endDate\": `Enddatum`,\n  \"era\": `Epoche`,\n  \"hour\": `Stunde`,\n  \"minute\": `Minute`,\n  \"month\": `Monat`,\n  \"second\": `Sekunde`,\n  \"selectedDateDescription\": args => `Ausgewähltes Datum: ${args.date}`,\n  \"selectedRangeDescription\": args => `Ausgewählter Bereich: ${args.startDate} bis ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Ausgewählte Zeit: ${args.time}`,\n  \"startDate\": `Anfangsdatum`,\n  \"timeZoneName\": `Zeitzone`,\n  \"weekday\": `Wochentag`,\n  \"year\": `Jahr`\n};\nvar $518b4e82b9eacafd$exports = {};\n$518b4e82b9eacafd$exports = {\n  \"calendar\": `Ημερολόγιο`,\n  \"day\": `ημέρα`,\n  \"dayPeriod\": `π.μ./μ.μ.`,\n  \"endDate\": `Ημερομηνία λήξης`,\n  \"era\": `περίοδος`,\n  \"hour\": `ώρα`,\n  \"minute\": `λεπτό`,\n  \"month\": `μήνας`,\n  \"second\": `δευτερόλεπτο`,\n  \"selectedDateDescription\": args => `Επιλεγμένη ημερομηνία: ${args.date}`,\n  \"selectedRangeDescription\": args => `Επιλεγμένο εύρος: ${args.startDate} έως ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Επιλεγμένη ώρα: ${args.time}`,\n  \"startDate\": `Ημερομηνία έναρξης`,\n  \"timeZoneName\": `ζώνη ώρας`,\n  \"weekday\": `καθημερινή`,\n  \"year\": `έτος`\n};\nvar $1c2b297f7e2cf474$exports = {};\n$1c2b297f7e2cf474$exports = {\n  \"era\": `era`,\n  \"year\": `year`,\n  \"month\": `month`,\n  \"day\": `day`,\n  \"hour\": `hour`,\n  \"minute\": `minute`,\n  \"second\": `second`,\n  \"dayPeriod\": `AM/PM`,\n  \"calendar\": `Calendar`,\n  \"startDate\": `Start Date`,\n  \"endDate\": `End Date`,\n  \"weekday\": `day of the week`,\n  \"timeZoneName\": `time zone`,\n  \"selectedDateDescription\": args => `Selected Date: ${args.date}`,\n  \"selectedRangeDescription\": args => `Selected Range: ${args.startDate} to ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Selected Time: ${args.time}`\n};\nvar $07f628a707cf9b18$exports = {};\n$07f628a707cf9b18$exports = {\n  \"calendar\": `Calendario`,\n  \"day\": `día`,\n  \"dayPeriod\": `a. m./p. m.`,\n  \"endDate\": `Fecha final`,\n  \"era\": `era`,\n  \"hour\": `hora`,\n  \"minute\": `minuto`,\n  \"month\": `mes`,\n  \"second\": `segundo`,\n  \"selectedDateDescription\": args => `Fecha seleccionada: ${args.date}`,\n  \"selectedRangeDescription\": args => `Rango seleccionado: ${args.startDate} a ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Hora seleccionada: ${args.time}`,\n  \"startDate\": `Fecha de inicio`,\n  \"timeZoneName\": `zona horaria`,\n  \"weekday\": `día de la semana`,\n  \"year\": `año`\n};\nvar $db553ffe17c7f4db$exports = {};\n$db553ffe17c7f4db$exports = {\n  \"calendar\": `Kalender`,\n  \"day\": `päev`,\n  \"dayPeriod\": `enne/pärast lõunat`,\n  \"endDate\": `Lõppkuupäev`,\n  \"era\": `ajastu`,\n  \"hour\": `tund`,\n  \"minute\": `minut`,\n  \"month\": `kuu`,\n  \"second\": `sekund`,\n  \"selectedDateDescription\": args => `Valitud kuupäev: ${args.date}`,\n  \"selectedRangeDescription\": args => `Valitud vahemik: ${args.startDate} kuni ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Valitud aeg: ${args.time}`,\n  \"startDate\": `Alguskuupäev`,\n  \"timeZoneName\": `ajavöönd`,\n  \"weekday\": `nädalapäev`,\n  \"year\": `aasta`\n};\nvar $4afcfe00cd703f83$exports = {};\n$4afcfe00cd703f83$exports = {\n  \"calendar\": `Kalenteri`,\n  \"day\": `päivä`,\n  \"dayPeriod\": `vuorokaudenaika`,\n  \"endDate\": `Päättymispäivä`,\n  \"era\": `aikakausi`,\n  \"hour\": `tunti`,\n  \"minute\": `minuutti`,\n  \"month\": `kuukausi`,\n  \"second\": `sekunti`,\n  \"selectedDateDescription\": args => `Valittu päivämäärä: ${args.date}`,\n  \"selectedRangeDescription\": args => `Valittu aikaväli: ${args.startDate} – ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Valittu aika: ${args.time}`,\n  \"startDate\": `Alkamispäivä`,\n  \"timeZoneName\": `aikavyöhyke`,\n  \"weekday\": `viikonpäivä`,\n  \"year\": `vuosi`\n};\nvar $1d2645d18d4c5be0$exports = {};\n$1d2645d18d4c5be0$exports = {\n  \"calendar\": `Calendrier`,\n  \"day\": `jour`,\n  \"dayPeriod\": `cadran`,\n  \"endDate\": `Date de fin`,\n  \"era\": `ère`,\n  \"hour\": `heure`,\n  \"minute\": `minute`,\n  \"month\": `mois`,\n  \"second\": `seconde`,\n  \"selectedDateDescription\": args => `Date sélectionnée : ${args.date}`,\n  \"selectedRangeDescription\": args => `Plage sélectionnée : ${args.startDate} au ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Heure choisie : ${args.time}`,\n  \"startDate\": `Date de début`,\n  \"timeZoneName\": `fuseau horaire`,\n  \"weekday\": `jour de la semaine`,\n  \"year\": `année`\n};\nvar $64cb6a9be1f6fa48$exports = {};\n$64cb6a9be1f6fa48$exports = {\n  \"calendar\": `לוח שנה`,\n  \"day\": `יום`,\n  \"dayPeriod\": `לפנה״צ/אחה״צ`,\n  \"endDate\": `תאריך סיום`,\n  \"era\": `תקופה`,\n  \"hour\": `שעה`,\n  \"minute\": `דקה`,\n  \"month\": `חודש`,\n  \"second\": `שנייה`,\n  \"selectedDateDescription\": args => `תאריך נבחר: ${args.date}`,\n  \"selectedRangeDescription\": args => `טווח נבחר: ${args.startDate} עד ${args.endDate}`,\n  \"selectedTimeDescription\": args => `זמן נבחר: ${args.time}`,\n  \"startDate\": `תאריך התחלה`,\n  \"timeZoneName\": `אזור זמן`,\n  \"weekday\": `יום בשבוע`,\n  \"year\": `שנה`\n};\nvar $2a1ef2e8050be27a$exports = {};\n$2a1ef2e8050be27a$exports = {\n  \"calendar\": `Kalendar`,\n  \"day\": `dan`,\n  \"dayPeriod\": `AM/PM`,\n  \"endDate\": `Datum završetka`,\n  \"era\": `era`,\n  \"hour\": `sat`,\n  \"minute\": `minuta`,\n  \"month\": `mjesec`,\n  \"second\": `sekunda`,\n  \"selectedDateDescription\": args => `Odabrani datum: ${args.date}`,\n  \"selectedRangeDescription\": args => `Odabrani raspon: ${args.startDate} do ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Odabrano vrijeme: ${args.time}`,\n  \"startDate\": `Datum početka`,\n  \"timeZoneName\": `vremenska zona`,\n  \"weekday\": `dan u tjednu`,\n  \"year\": `godina`\n};\nvar $ad429dca102acd0e$exports = {};\n$ad429dca102acd0e$exports = {\n  \"calendar\": `Naptár`,\n  \"day\": `nap`,\n  \"dayPeriod\": `napszak`,\n  \"endDate\": `Befejező dátum`,\n  \"era\": `éra`,\n  \"hour\": `óra`,\n  \"minute\": `perc`,\n  \"month\": `hónap`,\n  \"second\": `másodperc`,\n  \"selectedDateDescription\": args => `Kijelölt dátum: ${args.date}`,\n  \"selectedRangeDescription\": args => `Kijelölt tartomány: ${args.startDate}–${args.endDate}`,\n  \"selectedTimeDescription\": args => `Kijelölt idő: ${args.time}`,\n  \"startDate\": `Kezdő dátum`,\n  \"timeZoneName\": `időzóna`,\n  \"weekday\": `hét napja`,\n  \"year\": `év`\n};\nvar $6e68cb5d1cb97bd2$exports = {};\n$6e68cb5d1cb97bd2$exports = {\n  \"calendar\": `Calendario`,\n  \"day\": `giorno`,\n  \"dayPeriod\": `AM/PM`,\n  \"endDate\": `Data finale`,\n  \"era\": `era`,\n  \"hour\": `ora`,\n  \"minute\": `minuto`,\n  \"month\": `mese`,\n  \"second\": `secondo`,\n  \"selectedDateDescription\": args => `Data selezionata: ${args.date}`,\n  \"selectedRangeDescription\": args => `Intervallo selezionato: da ${args.startDate} a ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Ora selezionata: ${args.time}`,\n  \"startDate\": `Data iniziale`,\n  \"timeZoneName\": `fuso orario`,\n  \"weekday\": `giorno della settimana`,\n  \"year\": `anno`\n};\nvar $a82ee9af063ee069$exports = {};\n$a82ee9af063ee069$exports = {\n  \"calendar\": `カレンダー`,\n  \"day\": `日`,\n  \"dayPeriod\": `午前/午後`,\n  \"endDate\": `終了日`,\n  \"era\": `時代`,\n  \"hour\": `時`,\n  \"minute\": `分`,\n  \"month\": `月`,\n  \"second\": `秒`,\n  \"selectedDateDescription\": args => `選択した日付 : ${args.date}`,\n  \"selectedRangeDescription\": args => `選択範囲 : ${args.startDate} から ${args.endDate}`,\n  \"selectedTimeDescription\": args => `選択した時間 : ${args.time}`,\n  \"startDate\": `開始日`,\n  \"timeZoneName\": `タイムゾーン`,\n  \"weekday\": `曜日`,\n  \"year\": `年`\n};\nvar $67e9091dbf37d4eb$exports = {};\n$67e9091dbf37d4eb$exports = {\n  \"calendar\": `달력`,\n  \"day\": `일`,\n  \"dayPeriod\": `오전/오후`,\n  \"endDate\": `종료 날짜`,\n  \"era\": `연호`,\n  \"hour\": `시`,\n  \"minute\": `분`,\n  \"month\": `월`,\n  \"second\": `초`,\n  \"selectedDateDescription\": args => `선택 일자: ${args.date}`,\n  \"selectedRangeDescription\": args => `선택 범위: ${args.startDate} ~ ${args.endDate}`,\n  \"selectedTimeDescription\": args => `선택 시간: ${args.time}`,\n  \"startDate\": `시작 날짜`,\n  \"timeZoneName\": `시간대`,\n  \"weekday\": `요일`,\n  \"year\": `년`\n};\nvar $75834f9729f653d1$exports = {};\n$75834f9729f653d1$exports = {\n  \"calendar\": `Kalendorius`,\n  \"day\": `diena`,\n  \"dayPeriod\": `iki pietų / po pietų`,\n  \"endDate\": `Pabaigos data`,\n  \"era\": `era`,\n  \"hour\": `valanda`,\n  \"minute\": `minutė`,\n  \"month\": `mėnuo`,\n  \"second\": `sekundė`,\n  \"selectedDateDescription\": args => `Pasirinkta data: ${args.date}`,\n  \"selectedRangeDescription\": args => `Pasirinktas intervalas: nuo ${args.startDate} iki ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Pasirinktas laikas: ${args.time}`,\n  \"startDate\": `Pradžios data`,\n  \"timeZoneName\": `laiko juosta`,\n  \"weekday\": `savaitės diena`,\n  \"year\": `metai`\n};\nvar $a2df2c2520b4a7f0$exports = {};\n$a2df2c2520b4a7f0$exports = {\n  \"calendar\": `Kalendārs`,\n  \"day\": `diena`,\n  \"dayPeriod\": `priekšpusdienā/pēcpusdienā`,\n  \"endDate\": `Beigu datums`,\n  \"era\": `ēra`,\n  \"hour\": `stundas`,\n  \"minute\": `minūtes`,\n  \"month\": `mēnesis`,\n  \"second\": `sekundes`,\n  \"selectedDateDescription\": args => `Atlasītais datums: ${args.date}`,\n  \"selectedRangeDescription\": args => `Atlasītais diapazons: no ${args.startDate} līdz ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Atlasītais laiks: ${args.time}`,\n  \"startDate\": `Sākuma datums`,\n  \"timeZoneName\": `laika josla`,\n  \"weekday\": `nedēļas diena`,\n  \"year\": `gads`\n};\nvar $aedcd71db4933ed5$exports = {};\n$aedcd71db4933ed5$exports = {\n  \"calendar\": `Kalender`,\n  \"day\": `dag`,\n  \"dayPeriod\": `a.m./p.m.`,\n  \"endDate\": `Sluttdato`,\n  \"era\": `tidsalder`,\n  \"hour\": `time`,\n  \"minute\": `minutt`,\n  \"month\": `måned`,\n  \"second\": `sekund`,\n  \"selectedDateDescription\": args => `Valgt dato: ${args.date}`,\n  \"selectedRangeDescription\": args => `Valgt område: ${args.startDate} til ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Valgt tid: ${args.time}`,\n  \"startDate\": `Startdato`,\n  \"timeZoneName\": `tidssone`,\n  \"weekday\": `ukedag`,\n  \"year\": `år`\n};\nvar $3b2df9e54353046c$exports = {};\n$3b2df9e54353046c$exports = {\n  \"calendar\": `Kalender`,\n  \"day\": `dag`,\n  \"dayPeriod\": `a.m./p.m.`,\n  \"endDate\": `Einddatum`,\n  \"era\": `tijdperk`,\n  \"hour\": `uur`,\n  \"minute\": `minuut`,\n  \"month\": `maand`,\n  \"second\": `seconde`,\n  \"selectedDateDescription\": args => `Geselecteerde datum: ${args.date}`,\n  \"selectedRangeDescription\": args => `Geselecteerd bereik: ${args.startDate} tot ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Geselecteerde tijd: ${args.time}`,\n  \"startDate\": `Startdatum`,\n  \"timeZoneName\": `tijdzone`,\n  \"weekday\": `dag van de week`,\n  \"year\": `jaar`\n};\nvar $c03fe977fcfafe93$exports = {};\n$c03fe977fcfafe93$exports = {\n  \"calendar\": `Kalendarz`,\n  \"day\": `dzień`,\n  \"dayPeriod\": `rano / po południu / wieczorem`,\n  \"endDate\": `Data końcowa`,\n  \"era\": `era`,\n  \"hour\": `godzina`,\n  \"minute\": `minuta`,\n  \"month\": `miesiąc`,\n  \"second\": `sekunda`,\n  \"selectedDateDescription\": args => `Wybrana data: ${args.date}`,\n  \"selectedRangeDescription\": args => `Wybrany zakres: ${args.startDate} do ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Wybrany czas: ${args.time}`,\n  \"startDate\": `Data początkowa`,\n  \"timeZoneName\": `strefa czasowa`,\n  \"weekday\": `dzień tygodnia`,\n  \"year\": `rok`\n};\nvar $569f006fc292345f$exports = {};\n$569f006fc292345f$exports = {\n  \"calendar\": `Calendário`,\n  \"day\": `dia`,\n  \"dayPeriod\": `AM/PM`,\n  \"endDate\": `Data final`,\n  \"era\": `era`,\n  \"hour\": `hora`,\n  \"minute\": `minuto`,\n  \"month\": `mês`,\n  \"second\": `segundo`,\n  \"selectedDateDescription\": args => `Data selecionada: ${args.date}`,\n  \"selectedRangeDescription\": args => `Intervalo selecionado: ${args.startDate} a ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Hora selecionada: ${args.time}`,\n  \"startDate\": `Data inicial`,\n  \"timeZoneName\": `fuso horário`,\n  \"weekday\": `dia da semana`,\n  \"year\": `ano`\n};\nvar $7c2494e14452f2dd$exports = {};\n$7c2494e14452f2dd$exports = {\n  \"calendar\": `Calendário`,\n  \"day\": `dia`,\n  \"dayPeriod\": `am/pm`,\n  \"endDate\": `Data de Término`,\n  \"era\": `era`,\n  \"hour\": `hora`,\n  \"minute\": `minuto`,\n  \"month\": `mês`,\n  \"second\": `segundo`,\n  \"selectedDateDescription\": args => `Data selecionada: ${args.date}`,\n  \"selectedRangeDescription\": args => `Intervalo selecionado: ${args.startDate} a ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Hora selecionada: ${args.time}`,\n  \"startDate\": `Data de Início`,\n  \"timeZoneName\": `fuso horário`,\n  \"weekday\": `dia da semana`,\n  \"year\": `ano`\n};\nvar $eb82ef981b5592bf$exports = {};\n$eb82ef981b5592bf$exports = {\n  \"calendar\": `Calendar`,\n  \"day\": `zi`,\n  \"dayPeriod\": `a.m/p.m.`,\n  \"endDate\": `Dată final`,\n  \"era\": `eră`,\n  \"hour\": `oră`,\n  \"minute\": `minut`,\n  \"month\": `lună`,\n  \"second\": `secundă`,\n  \"selectedDateDescription\": args => `Dată selectată: ${args.date}`,\n  \"selectedRangeDescription\": args => `Interval selectat: de la ${args.startDate} până la ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Ora selectată: ${args.time}`,\n  \"startDate\": `Dată început`,\n  \"timeZoneName\": `fus orar`,\n  \"weekday\": `ziua din săptămână`,\n  \"year\": `an`\n};\nvar $6efa0e119f396950$exports = {};\n$6efa0e119f396950$exports = {\n  \"calendar\": `Календарь`,\n  \"day\": `день`,\n  \"dayPeriod\": `AM/PM`,\n  \"endDate\": `Дата окончания`,\n  \"era\": `эра`,\n  \"hour\": `час`,\n  \"minute\": `минута`,\n  \"month\": `месяц`,\n  \"second\": `секунда`,\n  \"selectedDateDescription\": args => `Выбранная дата: ${args.date}`,\n  \"selectedRangeDescription\": args => `Выбранный диапазон: с ${args.startDate} по ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Выбранное время: ${args.time}`,\n  \"startDate\": `Дата начала`,\n  \"timeZoneName\": `часовой пояс`,\n  \"weekday\": `день недели`,\n  \"year\": `год`\n};\nvar $7f5e57085d7f5049$exports = {};\n$7f5e57085d7f5049$exports = {\n  \"calendar\": `Kalendár`,\n  \"day\": `deň`,\n  \"dayPeriod\": `AM/PM`,\n  \"endDate\": `Dátum ukončenia`,\n  \"era\": `letopočet`,\n  \"hour\": `hodina`,\n  \"minute\": `minúta`,\n  \"month\": `mesiac`,\n  \"second\": `sekunda`,\n  \"selectedDateDescription\": args => `Vybratý dátum: ${args.date}`,\n  \"selectedRangeDescription\": args => `Vybratý rozsah: od ${args.startDate} do ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Vybratý čas: ${args.time}`,\n  \"startDate\": `Dátum začatia`,\n  \"timeZoneName\": `časové pásmo`,\n  \"weekday\": `deň týždňa`,\n  \"year\": `rok`\n};\nvar $578ee7c11dcdde7a$exports = {};\n$578ee7c11dcdde7a$exports = {\n  \"calendar\": `Koledar`,\n  \"day\": `dan`,\n  \"dayPeriod\": `dop/pop`,\n  \"endDate\": `Datum konca`,\n  \"era\": `doba`,\n  \"hour\": `ura`,\n  \"minute\": `minuta`,\n  \"month\": `mesec`,\n  \"second\": `sekunda`,\n  \"selectedDateDescription\": args => `Izbrani datum: ${args.date}`,\n  \"selectedRangeDescription\": args => `Izbrano območje: ${args.startDate} do ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Izbrani čas: ${args.time}`,\n  \"startDate\": `Datum začetka`,\n  \"timeZoneName\": `časovni pas`,\n  \"weekday\": `dan v tednu`,\n  \"year\": `leto`\n};\nvar $bbc3fd6cd0bc9d50$exports = {};\n$bbc3fd6cd0bc9d50$exports = {\n  \"calendar\": `Kalendar`,\n  \"day\": `дан`,\n  \"dayPeriod\": `пре подне/по подне`,\n  \"endDate\": `Datum završetka`,\n  \"era\": `ера`,\n  \"hour\": `сат`,\n  \"minute\": `минут`,\n  \"month\": `месец`,\n  \"second\": `секунд`,\n  \"selectedDateDescription\": args => `Izabrani datum: ${args.date}`,\n  \"selectedRangeDescription\": args => `Izabrani opseg: od ${args.startDate} do ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Izabrano vreme: ${args.time}`,\n  \"startDate\": `Datum početka`,\n  \"timeZoneName\": `временска зона`,\n  \"weekday\": `дан у недељи`,\n  \"year\": `година`\n};\nvar $0b04512118591d2a$exports = {};\n$0b04512118591d2a$exports = {\n  \"calendar\": `Kalender`,\n  \"day\": `dag`,\n  \"dayPeriod\": `fm/em`,\n  \"endDate\": `Slutdatum`,\n  \"era\": `era`,\n  \"hour\": `timme`,\n  \"minute\": `minut`,\n  \"month\": `månad`,\n  \"second\": `sekund`,\n  \"selectedDateDescription\": args => `Valt datum: ${args.date}`,\n  \"selectedRangeDescription\": args => `Valt intervall: ${args.startDate} till ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Vald tid: ${args.time}`,\n  \"startDate\": `Startdatum`,\n  \"timeZoneName\": `tidszon`,\n  \"weekday\": `veckodag`,\n  \"year\": `år`\n};\nvar $3a49d121fe4c9e1d$exports = {};\n$3a49d121fe4c9e1d$exports = {\n  \"calendar\": `Takvim`,\n  \"day\": `gün`,\n  \"dayPeriod\": `ÖÖ/ÖS`,\n  \"endDate\": `Bitiş Tarihi`,\n  \"era\": `çağ`,\n  \"hour\": `saat`,\n  \"minute\": `dakika`,\n  \"month\": `ay`,\n  \"second\": `saniye`,\n  \"selectedDateDescription\": args => `Seçilen Tarih: ${args.date}`,\n  \"selectedRangeDescription\": args => `Seçilen Aralık: ${args.startDate} - ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Seçilen Zaman: ${args.time}`,\n  \"startDate\": `Başlangıç Tarihi`,\n  \"timeZoneName\": `saat dilimi`,\n  \"weekday\": `haftanın günü`,\n  \"year\": `yıl`\n};\nvar $5ba21dbb8914919d$exports = {};\n$5ba21dbb8914919d$exports = {\n  \"calendar\": `Календар`,\n  \"day\": `день`,\n  \"dayPeriod\": `дп/пп`,\n  \"endDate\": `Дата завершення`,\n  \"era\": `ера`,\n  \"hour\": `година`,\n  \"minute\": `хвилина`,\n  \"month\": `місяць`,\n  \"second\": `секунда`,\n  \"selectedDateDescription\": args => `Вибрана дата: ${args.date}`,\n  \"selectedRangeDescription\": args => `Вибраний діапазон: ${args.startDate} — ${args.endDate}`,\n  \"selectedTimeDescription\": args => `Вибраний час: ${args.time}`,\n  \"startDate\": `Дата початку`,\n  \"timeZoneName\": `часовий пояс`,\n  \"weekday\": `день тижня`,\n  \"year\": `рік`\n};\nvar $51078838e1b16cd7$exports = {};\n$51078838e1b16cd7$exports = {\n  \"calendar\": `日历`,\n  \"day\": `日`,\n  \"dayPeriod\": `上午/下午`,\n  \"endDate\": `结束日期`,\n  \"era\": `纪元`,\n  \"hour\": `小时`,\n  \"minute\": `分钟`,\n  \"month\": `月`,\n  \"second\": `秒`,\n  \"selectedDateDescription\": args => `选定的日期：${args.date}`,\n  \"selectedRangeDescription\": args => `选定的范围：${args.startDate} 至 ${args.endDate}`,\n  \"selectedTimeDescription\": args => `选定的时间：${args.time}`,\n  \"startDate\": `开始日期`,\n  \"timeZoneName\": `时区`,\n  \"weekday\": `工作日`,\n  \"year\": `年`\n};\nvar $33fab8219207655a$exports = {};\n$33fab8219207655a$exports = {\n  \"calendar\": `日曆`,\n  \"day\": `日`,\n  \"dayPeriod\": `上午/下午`,\n  \"endDate\": `結束日期`,\n  \"era\": `纪元`,\n  \"hour\": `小时`,\n  \"minute\": `分钟`,\n  \"month\": `月`,\n  \"second\": `秒`,\n  \"selectedDateDescription\": args => `選定的日期：${args.date}`,\n  \"selectedRangeDescription\": args => `選定的範圍：${args.startDate} 至 ${args.endDate}`,\n  \"selectedTimeDescription\": args => `選定的時間：${args.time}`,\n  \"startDate\": `開始日期`,\n  \"timeZoneName\": `时区`,\n  \"weekday\": `工作日`,\n  \"year\": `年`\n};\n$204383cf4f6b0d06$exports = {\n  \"ar-AE\": $f23889fffbde9058$exports,\n  \"bg-BG\": $09d9badaa8903929$exports,\n  \"cs-CZ\": $151b77e0fd711730$exports,\n  \"da-DK\": $61915aa8630b90a2$exports,\n  \"de-DE\": $35cea00159787840$exports,\n  \"el-GR\": $518b4e82b9eacafd$exports,\n  \"en-US\": $1c2b297f7e2cf474$exports,\n  \"es-ES\": $07f628a707cf9b18$exports,\n  \"et-EE\": $db553ffe17c7f4db$exports,\n  \"fi-FI\": $4afcfe00cd703f83$exports,\n  \"fr-FR\": $1d2645d18d4c5be0$exports,\n  \"he-IL\": $64cb6a9be1f6fa48$exports,\n  \"hr-HR\": $2a1ef2e8050be27a$exports,\n  \"hu-HU\": $ad429dca102acd0e$exports,\n  \"it-IT\": $6e68cb5d1cb97bd2$exports,\n  \"ja-JP\": $a82ee9af063ee069$exports,\n  \"ko-KR\": $67e9091dbf37d4eb$exports,\n  \"lt-LT\": $75834f9729f653d1$exports,\n  \"lv-LV\": $a2df2c2520b4a7f0$exports,\n  \"nb-NO\": $aedcd71db4933ed5$exports,\n  \"nl-NL\": $3b2df9e54353046c$exports,\n  \"pl-PL\": $c03fe977fcfafe93$exports,\n  \"pt-BR\": $569f006fc292345f$exports,\n  \"pt-PT\": $7c2494e14452f2dd$exports,\n  \"ro-RO\": $eb82ef981b5592bf$exports,\n  \"ru-RU\": $6efa0e119f396950$exports,\n  \"sk-SK\": $7f5e57085d7f5049$exports,\n  \"sl-SI\": $578ee7c11dcdde7a$exports,\n  \"sr-SP\": $bbc3fd6cd0bc9d50$exports,\n  \"sv-SE\": $0b04512118591d2a$exports,\n  \"tr-TR\": $3a49d121fe4c9e1d$exports,\n  \"uk-UA\": $5ba21dbb8914919d$exports,\n  \"zh-CN\": $51078838e1b16cd7$exports,\n  \"zh-TW\": $33fab8219207655a$exports\n};\n\nfunction $3dfb0f96be0d6a08$export$4a931266a3838b86(state, ref1, disableArrowNavigation) {\n  let {\n    direction: direction\n  } = $cIPI0$useLocale();\n  let focusManager = $cIPI0$useMemo(() => $cIPI0$createFocusManager(ref1), [ref1]); // Open the popover on alt + arrow down\n\n  let onKeyDown = e => {\n    if (e.altKey && (e.key === 'ArrowDown' || e.key === 'ArrowUp') && 'setOpen' in state) {\n      e.preventDefault();\n      e.stopPropagation();\n      state.setOpen(true);\n    }\n\n    if (disableArrowNavigation) return;\n\n    switch (e.key) {\n      case 'ArrowLeft':\n        e.preventDefault();\n        e.stopPropagation();\n        if (direction === 'rtl') focusManager.focusNext();else focusManager.focusPrevious();\n        break;\n\n      case 'ArrowRight':\n        e.preventDefault();\n        e.stopPropagation();\n        if (direction === 'rtl') focusManager.focusPrevious();else focusManager.focusNext();\n        break;\n    }\n  }; // Focus the first placeholder segment from the end on mouse down/touch up in the field.\n\n\n  let focusLast = () => {\n    var ref; // Try to find the segment prior to the element that was clicked on.\n\n    let target = (ref = window.event) === null || ref === void 0 ? void 0 : ref.target;\n    let walker = $cIPI0$getFocusableTreeWalker(ref1.current, {\n      tabbable: true\n    });\n\n    if (target) {\n      walker.currentNode = target;\n      target = walker.previousNode();\n    } // If no target found, find the last element from the end.\n\n\n    if (!target) {\n      let last;\n\n      do {\n        last = walker.lastChild();\n        if (last) target = last;\n      } while (last);\n    } // Now go backwards until we find an element that is not a placeholder.\n\n\n    while (target === null || target === void 0 ? void 0 : target.hasAttribute('data-placeholder')) {\n      let prev = walker.previousNode();\n      if (prev && prev.hasAttribute('data-placeholder')) target = prev;else break;\n    }\n\n    if (target) target.focus();\n  };\n\n  let {\n    pressProps: pressProps\n  } = $cIPI0$usePress({\n    preventFocusOnPress: true,\n    allowTextSelectionOnPress: true,\n\n    onPressStart(e) {\n      if (e.pointerType === 'mouse') focusLast();\n    },\n\n    onPress(e) {\n      if (e.pointerType !== 'mouse') focusLast();\n    }\n\n  });\n  return $cIPI0$mergeProps(pressProps, {\n    onKeyDown: onKeyDown\n  });\n}\n\nconst $16f0b7bb276bc17e$export$653eddfc964b0f8a = new WeakMap();\nconst $16f0b7bb276bc17e$export$300019f83c56d282 = '__role_' + Date.now();\nconst $16f0b7bb276bc17e$export$7b3062cd49e80452 = '__focusManager_' + Date.now();\n\nfunction $16f0b7bb276bc17e$export$5591b0b878c1a989(props, state, ref) {\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  } = $cIPI0$useField({ ...props,\n    labelElementType: 'span'\n  });\n  let {\n    focusWithinProps: focusWithinProps\n  } = $cIPI0$useFocusWithin({\n    onBlurWithin() {\n      state.confirmPlaceholder();\n    }\n\n  });\n  let stringFormatter = $cIPI0$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($204383cf4f6b0d06$exports));\n  let message = state.maxGranularity === 'hour' ? 'selectedTimeDescription' : 'selectedDateDescription';\n  let field = state.maxGranularity === 'hour' ? 'time' : 'date';\n  let description = state.value ? stringFormatter.format(message, {\n    [field]: state.formatValue({\n      month: 'long'\n    })\n  }) : '';\n  let descProps = $cIPI0$useDescription(description); // If within a date picker or date range picker, the date field will have role=\"presentation\" and an aria-describedby\n  // will be passed in that references the value (e.g. entire range). Otherwise, add the field's value description.\n\n  let describedBy = props[$16f0b7bb276bc17e$export$300019f83c56d282] === 'presentation' ? fieldProps['aria-describedby'] : [descProps['aria-describedby'], fieldProps['aria-describedby']].filter(Boolean).join(' ') || undefined;\n  let propsFocusManager = props[$16f0b7bb276bc17e$export$7b3062cd49e80452];\n  let focusManager = $cIPI0$useMemo(() => propsFocusManager || $cIPI0$createFocusManager(ref), [propsFocusManager, ref]);\n  let groupProps = $3dfb0f96be0d6a08$export$4a931266a3838b86(state, ref, props[$16f0b7bb276bc17e$export$300019f83c56d282] === 'presentation'); // Pass labels and other information to segments.\n\n  $16f0b7bb276bc17e$export$653eddfc964b0f8a.set(state, {\n    ariaLabel: props['aria-label'],\n    ariaLabelledBy: [props['aria-labelledby'], labelProps.id].filter(Boolean).join(' ') || undefined,\n    ariaDescribedBy: describedBy,\n    focusManager: focusManager\n  });\n  let autoFocusRef = $cIPI0$useRef(props.autoFocus); // When used within a date picker or date range picker, the field gets role=\"presentation\"\n  // rather than role=\"group\". Since the date picker/date range picker already has a role=\"group\"\n  // with a label and description, and the segments are already labeled by this as well, this\n  // avoids very verbose duplicate announcements.\n\n  let fieldDOMProps;\n  if (props[$16f0b7bb276bc17e$export$300019f83c56d282] === 'presentation') fieldDOMProps = {\n    role: 'presentation'\n  };else fieldDOMProps = $cIPI0$mergeProps(fieldProps, {\n    role: 'group',\n    'aria-disabled': props.isDisabled || undefined,\n    'aria-describedby': describedBy\n  });\n  $cIPI0$useEffect(() => {\n    if (autoFocusRef.current) focusManager.focusFirst();\n    autoFocusRef.current = false;\n  }, [focusManager]);\n  let domProps = $cIPI0$filterDOMProps(props);\n  return {\n    labelProps: { ...labelProps,\n      onClick: () => {\n        focusManager.focusFirst();\n      }\n    },\n    fieldProps: $cIPI0$mergeProps(domProps, fieldDOMProps, groupProps, focusWithinProps),\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  };\n}\n\nfunction $16f0b7bb276bc17e$export$4c842f6a241dc825(props, state, ref) {\n  return $16f0b7bb276bc17e$export$5591b0b878c1a989(props, state, ref);\n}\n\nfunction $6057a3d2a53a12fd$export$42df105a73306d51(props, state, ref) {\n  let buttonId = $cIPI0$useId();\n  let dialogId = $cIPI0$useId();\n  let stringFormatter = $cIPI0$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($204383cf4f6b0d06$exports));\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  } = $cIPI0$useField({ ...props,\n    labelElementType: 'span'\n  });\n  let groupProps = $3dfb0f96be0d6a08$export$4a931266a3838b86(state, ref);\n  let labelledBy = fieldProps['aria-labelledby'] || fieldProps.id;\n  let {\n    locale: locale\n  } = $cIPI0$useLocale();\n  let date = state.formatValue(locale, {\n    month: 'long'\n  });\n  let description = date ? stringFormatter.format('selectedDateDescription', {\n    date: date\n  }) : '';\n  let descProps = $cIPI0$useDescription(description);\n  let ariaDescribedBy = [descProps['aria-describedby'], fieldProps['aria-describedby']].filter(Boolean).join(' ') || undefined;\n  let domProps = $cIPI0$filterDOMProps(props);\n  let focusManager = $cIPI0$useMemo(() => $cIPI0$createFocusManager(ref), [ref]);\n  return {\n    groupProps: $cIPI0$mergeProps(domProps, groupProps, fieldProps, descProps, {\n      role: 'group',\n      'aria-disabled': props.isDisabled || null,\n      'aria-labelledby': labelledBy,\n      'aria-describedby': ariaDescribedBy\n    }),\n    labelProps: { ...labelProps,\n      onClick: () => {\n        focusManager.focusFirst();\n      }\n    },\n    fieldProps: { ...fieldProps,\n      [$16f0b7bb276bc17e$export$300019f83c56d282]: 'presentation',\n      'aria-describedby': ariaDescribedBy,\n      value: state.value,\n      onChange: state.setValue,\n      minValue: props.minValue,\n      maxValue: props.maxValue,\n      placeholderValue: props.placeholderValue,\n      hideTimeZone: props.hideTimeZone,\n      hourCycle: props.hourCycle,\n      granularity: props.granularity,\n      isDisabled: props.isDisabled,\n      isReadOnly: props.isReadOnly,\n      isRequired: props.isRequired,\n      validationState: state.validationState,\n      autoFocus: props.autoFocus\n    },\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    buttonProps: { ...descProps,\n      id: buttonId,\n      'aria-haspopup': 'dialog',\n      'aria-label': stringFormatter.format('calendar'),\n      'aria-labelledby': `${labelledBy} ${buttonId}`,\n      'aria-describedby': ariaDescribedBy,\n      onPress: () => state.setOpen(true)\n    },\n    dialogProps: {\n      id: dialogId,\n      'aria-labelledby': `${labelledBy} ${buttonId}`\n    },\n    calendarProps: {\n      autoFocus: true,\n      value: state.dateValue,\n      onChange: state.setDateValue,\n      minValue: props.minValue,\n      maxValue: props.maxValue,\n      isDisabled: props.isDisabled,\n      isReadOnly: props.isReadOnly,\n      isDateUnavailable: props.isDateUnavailable,\n      defaultFocusedValue: state.dateValue ? undefined : props.placeholderValue,\n      validationState: state.validationState,\n      errorMessage: props.errorMessage\n    }\n  };\n}\n\nfunction $3aeceb3a64eb8358$export$d42c60378c8168f8() {\n  let {\n    locale: locale\n  } = $cIPI0$useLocale();\n  return $cIPI0$useMemo(() => {\n    // Try to use Intl.DisplayNames if possible. It may be supported in browsers, but not support the dateTimeField\n    // type as that was only added in v2. https://github.com/tc39/intl-displaynames-v2\n    try {\n      // @ts-ignore\n      return new Intl.DisplayNames(locale, {\n        type: 'dateTimeField'\n      });\n    } catch (err) {\n      return new $3aeceb3a64eb8358$var$DisplayNamesPolyfill(locale);\n    }\n  }, [locale]);\n}\n\nclass $3aeceb3a64eb8358$var$DisplayNamesPolyfill {\n  of(field) {\n    return this.dictionary.getStringForLocale(field, this.locale);\n  }\n\n  constructor(locale) {\n    this.locale = locale;\n    this.dictionary = new $cIPI0$LocalizedStringDictionary( /*@__PURE__*/$parcel$interopDefault($204383cf4f6b0d06$exports));\n  }\n\n}\n\nfunction $32489daedd52963e$export$1315d136e6f7581(segment, state, ref) {\n  let enteredKeys = $cIPI0$useRef('');\n  let {\n    locale: locale\n  } = $cIPI0$useLocale();\n  let displayNames = $3aeceb3a64eb8358$export$d42c60378c8168f8();\n  let {\n    ariaLabel: ariaLabel,\n    ariaLabelledBy: ariaLabelledBy,\n    ariaDescribedBy: ariaDescribedBy,\n    focusManager: focusManager\n  } = $16f0b7bb276bc17e$export$653eddfc964b0f8a.get(state);\n  let textValue = segment.isPlaceholder ? '' : segment.text;\n  let options = $cIPI0$useMemo(() => state.dateFormatter.resolvedOptions(), [state.dateFormatter]);\n  let monthDateFormatter = $cIPI0$useDateFormatter({\n    month: 'long',\n    timeZone: options.timeZone\n  });\n  let hourDateFormatter = $cIPI0$useDateFormatter({\n    hour: 'numeric',\n    hour12: options.hour12,\n    timeZone: options.timeZone\n  });\n\n  if (segment.type === 'month' && !segment.isPlaceholder) {\n    let monthTextValue = monthDateFormatter.format(state.dateValue);\n    textValue = monthTextValue !== textValue ? `${textValue} – ${monthTextValue}` : monthTextValue;\n  } else if (segment.type === 'hour' && !segment.isPlaceholder) textValue = hourDateFormatter.format(state.dateValue);\n\n  let {\n    spinButtonProps: spinButtonProps\n  } = $cIPI0$useSpinButton({\n    // The ARIA spec says aria-valuenow is optional if there's no value, but aXe seems to require it.\n    // This doesn't seem to have any negative effects with real AT since we also use aria-valuetext.\n    // https://github.com/dequelabs/axe-core/issues/3505\n    value: segment.value,\n    textValue: textValue,\n    minValue: segment.minValue,\n    maxValue: segment.maxValue,\n    isDisabled: state.isDisabled,\n    isReadOnly: state.isReadOnly || !segment.isEditable,\n    isRequired: state.isRequired,\n    onIncrement: () => {\n      enteredKeys.current = '';\n      state.increment(segment.type);\n    },\n    onDecrement: () => {\n      enteredKeys.current = '';\n      state.decrement(segment.type);\n    },\n    onIncrementPage: () => {\n      enteredKeys.current = '';\n      state.incrementPage(segment.type);\n    },\n    onDecrementPage: () => {\n      enteredKeys.current = '';\n      state.decrementPage(segment.type);\n    },\n    onIncrementToMax: () => {\n      enteredKeys.current = '';\n      state.setSegment(segment.type, segment.maxValue);\n    },\n    onDecrementToMin: () => {\n      enteredKeys.current = '';\n      state.setSegment(segment.type, segment.minValue);\n    }\n  });\n  let parser = $cIPI0$useMemo(() => new $cIPI0$NumberParser(locale, {\n    maximumFractionDigits: 0\n  }), [locale]);\n\n  let backspace = () => {\n    if (parser.isValidPartialNumber(segment.text) && !state.isReadOnly && !segment.isPlaceholder) {\n      let newValue = segment.text.slice(0, -1);\n      let parsed = parser.parse(newValue);\n      if (newValue.length === 0 || parsed === 0) state.clearSegment(segment.type);else state.setSegment(segment.type, parsed);\n      enteredKeys.current = newValue;\n    } else if (segment.type === 'dayPeriod') state.clearSegment(segment.type);\n  };\n\n  let onKeyDown = e => {\n    // Firefox does not fire selectstart for Ctrl/Cmd + A\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1742153\n    if (e.key === 'a' && ($cIPI0$isMac() ? e.metaKey : e.ctrlKey)) e.preventDefault();\n    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey) return;\n\n    switch (e.key) {\n      case 'Backspace':\n      case 'Delete':\n        // Safari on iOS does not fire beforeinput for the backspace key because the cursor is at the start.\n        e.preventDefault();\n        e.stopPropagation();\n        backspace();\n        break;\n    }\n  }; // Safari dayPeriod option doesn't work...\n\n\n  let {\n    startsWith: startsWith\n  } = $cIPI0$useFilter({\n    sensitivity: 'base'\n  });\n  let amPmFormatter = $cIPI0$useDateFormatter({\n    hour: 'numeric',\n    hour12: true\n  });\n  let am = $cIPI0$useMemo(() => {\n    let date = new Date();\n    date.setHours(0);\n    return amPmFormatter.formatToParts(date).find(part => part.type === 'dayPeriod').value;\n  }, [amPmFormatter]);\n  let pm = $cIPI0$useMemo(() => {\n    let date = new Date();\n    date.setHours(12);\n    return amPmFormatter.formatToParts(date).find(part => part.type === 'dayPeriod').value;\n  }, [amPmFormatter]); // Get a list of formatted era names so users can type the first character to choose one.\n\n  let eraFormatter = $cIPI0$useDateFormatter({\n    year: 'numeric',\n    era: 'narrow',\n    timeZone: 'UTC'\n  });\n  let eras1 = $cIPI0$useMemo(() => {\n    if (segment.type !== 'era') return [];\n    let date = $cIPI0$toCalendar(new $cIPI0$CalendarDate(1, 1, 1), state.calendar);\n    let eras = state.calendar.getEras().map(era => {\n      let eraDate = date.set({\n        year: 1,\n        month: 1,\n        day: 1,\n        era: era\n      }).toDate('UTC');\n      let parts = eraFormatter.formatToParts(eraDate);\n      let formatted = parts.find(p => p.type === 'era').value;\n      return {\n        era: era,\n        formatted: formatted\n      };\n    }); // Remove the common prefix from formatted values. This is so that in calendars with eras like\n    // ERA0 and ERA1 (e.g. Ethiopic), users can press \"0\" and \"1\" to select an era. In other cases,\n    // the first letter is used.\n\n    let prefixLength = $32489daedd52963e$var$commonPrefixLength(eras.map(era => era.formatted));\n    if (prefixLength) for (let era1 of eras) era1.formatted = era1.formatted.slice(prefixLength);\n    return eras;\n  }, [eraFormatter, state.calendar, segment.type]);\n\n  let onInput = key => {\n    if (state.isDisabled || state.isReadOnly) return;\n    let newValue = enteredKeys.current + key;\n\n    switch (segment.type) {\n      case 'dayPeriod':\n        if (startsWith(am, key)) state.setSegment('dayPeriod', 0);else if (startsWith(pm, key)) state.setSegment('dayPeriod', 12);else break;\n        focusManager.focusNext();\n        break;\n\n      case 'era':\n        {\n          let matched = eras1.find(e => startsWith(e.formatted, key));\n\n          if (matched) {\n            state.setSegment('era', matched.era);\n            focusManager.focusNext();\n          }\n\n          break;\n        }\n\n      case 'day':\n      case 'hour':\n      case 'minute':\n      case 'second':\n      case 'month':\n      case 'year':\n        {\n          if (!parser.isValidPartialNumber(newValue)) return;\n          let numberValue = parser.parse(newValue);\n          let segmentValue = numberValue;\n          let allowsZero = segment.minValue === 0;\n\n          if (segment.type === 'hour' && state.dateFormatter.resolvedOptions().hour12) {\n            switch (state.dateFormatter.resolvedOptions().hourCycle) {\n              case 'h11':\n                if (numberValue > 11) segmentValue = parser.parse(key);\n                break;\n\n              case 'h12':\n                allowsZero = false;\n                if (numberValue > 12) segmentValue = parser.parse(key);\n                break;\n            }\n\n            if (segment.value >= 12 && numberValue > 1) numberValue += 12;\n          } else if (numberValue > segment.maxValue) segmentValue = parser.parse(key);\n\n          if (isNaN(numberValue)) return;\n          let shouldSetValue = segmentValue !== 0 || allowsZero;\n          if (shouldSetValue) state.setSegment(segment.type, segmentValue);\n\n          if (Number(numberValue + '0') > segment.maxValue || newValue.length >= String(segment.maxValue).length) {\n            enteredKeys.current = '';\n            if (shouldSetValue) focusManager.focusNext();\n          } else enteredKeys.current = newValue;\n\n          break;\n        }\n    }\n  };\n\n  let onFocus = () => {\n    enteredKeys.current = '';\n    $cIPI0$scrollIntoView($cIPI0$getScrollParent(ref.current), ref.current); // Collapse selection to start or Chrome won't fire input events.\n\n    let selection = window.getSelection();\n    selection.collapse(ref.current);\n  };\n\n  let compositionRef = $cIPI0$useRef(''); // @ts-ignore - TODO: possibly old TS version? doesn't fail in my editor...\n\n  $cIPI0$useEvent(ref, 'beforeinput', e => {\n    e.preventDefault();\n\n    switch (e.inputType) {\n      case 'deleteContentBackward':\n      case 'deleteContentForward':\n        if (parser.isValidPartialNumber(segment.text) && !state.isReadOnly) backspace();\n        break;\n\n      case 'insertCompositionText':\n        // insertCompositionText cannot be canceled.\n        // Record the current state of the element so we can restore it in the `input` event below.\n        compositionRef.current = ref.current.textContent; // Safari gets stuck in a composition state unless we also assign to the value here.\n        // eslint-disable-next-line no-self-assign\n\n        ref.current.textContent = ref.current.textContent;\n        break;\n\n      default:\n        if (e.data != null) onInput(e.data);\n        break;\n    }\n  });\n  $cIPI0$useEvent(ref, 'input', e => {\n    let {\n      inputType: inputType,\n      data: data\n    } = e;\n\n    switch (inputType) {\n      case 'insertCompositionText':\n        // Reset the DOM to how it was in the beforeinput event.\n        ref.current.textContent = compositionRef.current; // Android sometimes fires key presses of letters as composition events. Need to handle am/pm keys here too.\n        // Can also happen e.g. with Pinyin keyboard on iOS.\n\n        if (startsWith(am, data) || startsWith(pm, data)) onInput(data);\n        break;\n    }\n  });\n  $cIPI0$useLayoutEffect(() => {\n    let element = ref.current;\n    return () => {\n      // If the focused segment is removed, focus the previous one, or the next one if there was no previous one.\n      if (document.activeElement === element) {\n        let prev = focusManager.focusPrevious();\n        if (!prev) focusManager.focusNext();\n      }\n    };\n  }, [ref, focusManager]); // spinbuttons cannot be focused with VoiceOver on iOS.\n\n  let touchPropOverrides = $cIPI0$isIOS() || segment.type === 'timeZoneName' ? {\n    role: 'textbox',\n    'aria-valuemax': null,\n    'aria-valuemin': null,\n    'aria-valuetext': null,\n    'aria-valuenow': null\n  } : {}; // Only apply aria-describedby to the first segment, unless the field is invalid. This avoids it being\n  // read every time the user navigates to a new segment.\n\n  let firstSegment = $cIPI0$useMemo(() => state.segments.find(s => s.isEditable), [state.segments]);\n  if (segment !== firstSegment && state.validationState !== 'invalid') ariaDescribedBy = undefined;\n  let id = $cIPI0$useId();\n  let isEditable = !state.isDisabled && !state.isReadOnly && segment.isEditable; // Prepend the label passed from the field to each segment name.\n  // This is needed because VoiceOver on iOS does not announce groups.\n\n  let name = segment.type === 'literal' ? '' : displayNames.of(segment.type);\n  let labelProps = $cIPI0$useLabels({\n    'aria-label': (ariaLabel ? ariaLabel + ' ' : '') + name,\n    'aria-labelledby': ariaLabelledBy\n  }); // Literal segments should not be visible to screen readers. We don't really need any of the above,\n  // but the rules of hooks mean hooks cannot be conditional so we have to put this condition here.\n\n  if (segment.type === 'literal') return {\n    segmentProps: {\n      'aria-hidden': true\n    }\n  };\n  return {\n    segmentProps: $cIPI0$mergeProps(spinButtonProps, labelProps, {\n      id: id,\n      ...touchPropOverrides,\n      'aria-invalid': state.validationState === 'invalid' ? 'true' : undefined,\n      'aria-describedby': ariaDescribedBy,\n      'aria-readonly': state.isReadOnly || !segment.isEditable ? 'true' : undefined,\n      'data-placeholder': segment.isPlaceholder || undefined,\n      contentEditable: isEditable,\n      suppressContentEditableWarning: isEditable,\n      spellCheck: isEditable ? 'false' : undefined,\n      autoCapitalize: isEditable ? 'off' : undefined,\n      autoCorrect: isEditable ? 'off' : undefined,\n      // Capitalization was changed in React 17...\n      [parseInt($cIPI0$react.version, 10) >= 17 ? 'enterKeyHint' : 'enterkeyhint']: isEditable ? 'next' : undefined,\n      inputMode: state.isDisabled || segment.type === 'dayPeriod' || segment.type === 'era' || !isEditable ? undefined : 'numeric',\n      tabIndex: state.isDisabled ? undefined : 0,\n      onKeyDown: onKeyDown,\n      onFocus: onFocus,\n      style: {\n        caretColor: 'transparent'\n      },\n\n      // Prevent pointer events from reaching useDatePickerGroup, and allow native browser behavior to focus the segment.\n      onPointerDown(e) {\n        e.stopPropagation();\n      },\n\n      onMouseDown(e) {\n        e.stopPropagation();\n      }\n\n    })\n  };\n}\n\nfunction $32489daedd52963e$var$commonPrefixLength(strings) {\n  // Sort the strings, and compare the characters in the first and last to find the common prefix.\n  strings.sort();\n  let first = strings[0];\n  let last = strings[strings.length - 1];\n\n  for (let i = 0; i < first.length; i++) {\n    if (first[i] !== last[i]) return i;\n  }\n\n  return 0;\n}\n\nfunction $887cac91b7cc8801$export$12fd5f0e9f4bb192(props, state, ref) {\n  var ref1, ref2;\n  let stringFormatter = $cIPI0$useLocalizedStringFormatter( /*@__PURE__*/$parcel$interopDefault($204383cf4f6b0d06$exports));\n  let {\n    labelProps: labelProps,\n    fieldProps: fieldProps,\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps\n  } = $cIPI0$useField({ ...props,\n    labelElementType: 'span'\n  });\n  let labelledBy = fieldProps['aria-labelledby'] || fieldProps.id;\n  let {\n    locale: locale\n  } = $cIPI0$useLocale();\n  let range = state.formatValue(locale, {\n    month: 'long'\n  });\n  let description = range ? stringFormatter.format('selectedRangeDescription', {\n    startDate: range.start,\n    endDate: range.end\n  }) : '';\n  let descProps = $cIPI0$useDescription(description);\n  let startFieldProps = {\n    'aria-label': stringFormatter.format('startDate'),\n    'aria-labelledby': labelledBy\n  };\n  let endFieldProps = {\n    'aria-label': stringFormatter.format('endDate'),\n    'aria-labelledby': labelledBy\n  };\n  let buttonId = $cIPI0$useId();\n  let dialogId = $cIPI0$useId();\n  let groupProps = $3dfb0f96be0d6a08$export$4a931266a3838b86(state, ref);\n  let ariaDescribedBy = [descProps['aria-describedby'], fieldProps['aria-describedby']].filter(Boolean).join(' ') || undefined;\n  let focusManager = $cIPI0$useMemo(() => $cIPI0$createFocusManager(ref, {\n    // Exclude the button from the focus manager.\n    accept: element => element.id !== buttonId\n  }), [ref, buttonId]);\n  let commonFieldProps = {\n    [$16f0b7bb276bc17e$export$7b3062cd49e80452]: focusManager,\n    [$16f0b7bb276bc17e$export$300019f83c56d282]: 'presentation',\n    'aria-describedby': ariaDescribedBy,\n    minValue: props.minValue,\n    maxValue: props.maxValue,\n    placeholderValue: props.placeholderValue,\n    hideTimeZone: props.hideTimeZone,\n    hourCycle: props.hourCycle,\n    granularity: props.granularity,\n    isDisabled: props.isDisabled,\n    isReadOnly: props.isReadOnly,\n    isRequired: props.isRequired,\n    validationState: state.validationState\n  };\n  let domProps = $cIPI0$filterDOMProps(props);\n  return {\n    groupProps: $cIPI0$mergeProps(domProps, groupProps, fieldProps, descProps, {\n      role: 'group',\n      'aria-disabled': props.isDisabled || null,\n      'aria-describedby': ariaDescribedBy\n    }),\n    labelProps: { ...labelProps,\n      onClick: () => {\n        focusManager.focusFirst();\n      }\n    },\n    buttonProps: { ...descProps,\n      id: buttonId,\n      'aria-haspopup': 'dialog',\n      'aria-label': stringFormatter.format('calendar'),\n      'aria-labelledby': `${labelledBy} ${buttonId}`,\n      'aria-describedby': ariaDescribedBy,\n      onPress: () => state.setOpen(true)\n    },\n    dialogProps: {\n      id: dialogId,\n      'aria-labelledby': `${labelledBy} ${buttonId}`\n    },\n    startFieldProps: { ...startFieldProps,\n      ...commonFieldProps,\n      value: (ref1 = state.value) === null || ref1 === void 0 ? void 0 : ref1.start,\n      onChange: start => state.setDateTime('start', start),\n      autoFocus: props.autoFocus\n    },\n    endFieldProps: { ...endFieldProps,\n      ...commonFieldProps,\n      value: (ref2 = state.value) === null || ref2 === void 0 ? void 0 : ref2.end,\n      onChange: end => state.setDateTime('end', end)\n    },\n    descriptionProps: descriptionProps,\n    errorMessageProps: errorMessageProps,\n    calendarProps: {\n      autoFocus: true,\n      value: state.dateRange,\n      onChange: state.setDateRange,\n      minValue: props.minValue,\n      maxValue: props.maxValue,\n      isDisabled: props.isDisabled,\n      isReadOnly: props.isReadOnly,\n      isDateUnavailable: props.isDateUnavailable,\n      allowsNonContiguousRanges: props.allowsNonContiguousRanges,\n      defaultFocusedValue: state.dateRange ? undefined : props.placeholderValue,\n      validationState: state.validationState,\n      errorMessage: props.errorMessage\n    }\n  };\n}\n\nexport { $6057a3d2a53a12fd$export$42df105a73306d51 as useDatePicker, $32489daedd52963e$export$1315d136e6f7581 as useDateSegment, $16f0b7bb276bc17e$export$5591b0b878c1a989 as useDateField, $16f0b7bb276bc17e$export$4c842f6a241dc825 as useTimeField, $887cac91b7cc8801$export$12fd5f0e9f4bb192 as useDateRangePicker, $3aeceb3a64eb8358$export$d42c60378c8168f8 as useDisplayNames };","map":{"version":3,"mappings":"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","names":["$f23889fffbde9058$exports","args","$09d9badaa8903929$exports","$151b77e0fd711730$exports","date","$61915aa8630b90a2$exports","startDate","endDate","time","$35cea00159787840$exports","$518b4e82b9eacafd$exports","$1c2b297f7e2cf474$exports","$07f628a707cf9b18$exports","$db553ffe17c7f4db$exports","$4afcfe00cd703f83$exports","$1d2645d18d4c5be0$exports","$64cb6a9be1f6fa48$exports","$2a1ef2e8050be27a$exports","$ad429dca102acd0e$exports","$6e68cb5d1cb97bd2$exports","$a82ee9af063ee069$exports","$67e9091dbf37d4eb$exports","$75834f9729f653d1$exports","$a2df2c2520b4a7f0$exports","$aedcd71db4933ed5$exports","$3b2df9e54353046c$exports","$c03fe977fcfafe93$exports","$569f006fc292345f$exports","$7c2494e14452f2dd$exports","$eb82ef981b5592bf$exports","$6efa0e119f396950$exports","$7f5e57085d7f5049$exports","$578ee7c11dcdde7a$exports","$bbc3fd6cd0bc9d50$exports","$0b04512118591d2a$exports","$3a49d121fe4c9e1d$exports","$5ba21dbb8914919d$exports","$51078838e1b16cd7$exports","$33fab8219207655a$exports","$204383cf4f6b0d06$exports","$3dfb0f96be0d6a08$export$4a931266a3838b86","state","ref1","disableArrowNavigation","direction","$cIPI0$useLocale","focusManager","$cIPI0$useMemo","$cIPI0$createFocusManager","onKeyDown","e","altKey","key","preventDefault","stopPropagation","setOpen","focusNext","focusPrevious","focusLast","ref","target","window","event","walker","$cIPI0$getFocusableTreeWalker","current","tabbable","currentNode","previousNode","last","lastChild","hasAttribute","prev","focus","pressProps","$cIPI0$usePress","preventFocusOnPress","allowTextSelectionOnPress","onPressStart","pointerType","onPress","$cIPI0$mergeProps","$16f0b7bb276bc17e$export$653eddfc964b0f8a","WeakMap","$16f0b7bb276bc17e$export$300019f83c56d282","Date","now","$16f0b7bb276bc17e$export$7b3062cd49e80452","$16f0b7bb276bc17e$export$5591b0b878c1a989","props","labelProps","fieldProps","descriptionProps","errorMessageProps","$cIPI0$useField","labelElementType","focusWithinProps","$cIPI0$useFocusWithin","onBlurWithin","confirmPlaceholder","stringFormatter","$cIPI0$useLocalizedStringFormatter","message","maxGranularity","field","description","value","format","formatValue","month","descProps","$cIPI0$useDescription","describedBy","filter","Boolean","join","undefined","propsFocusManager","groupProps","set","ariaLabel","ariaLabelledBy","id","ariaDescribedBy","autoFocusRef","$cIPI0$useRef","autoFocus","fieldDOMProps","role","isDisabled","$cIPI0$useEffect","focusFirst","domProps","$cIPI0$filterDOMProps","onClick","$16f0b7bb276bc17e$export$4c842f6a241dc825","$6057a3d2a53a12fd$export$42df105a73306d51","buttonId","$cIPI0$useId","dialogId","labelledBy","locale","onChange","setValue","minValue","maxValue","placeholderValue","hideTimeZone","hourCycle","granularity","isReadOnly","isRequired","validationState","buttonProps","dialogProps","calendarProps","dateValue","setDateValue","isDateUnavailable","defaultFocusedValue","errorMessage","$3aeceb3a64eb8358$export$d42c60378c8168f8","Intl","DisplayNames","type","err","$3aeceb3a64eb8358$var$DisplayNamesPolyfill","of","dictionary","getStringForLocale","$cIPI0$LocalizedStringDictionary","$32489daedd52963e$export$1315d136e6f7581","segment","enteredKeys","displayNames","get","textValue","isPlaceholder","text","options","dateFormatter","resolvedOptions","monthDateFormatter","$cIPI0$useDateFormatter","timeZone","hourDateFormatter","hour","hour12","monthTextValue","spinButtonProps","$cIPI0$useSpinButton","isEditable","onIncrement","increment","onDecrement","decrement","onIncrementPage","incrementPage","onDecrementPage","decrementPage","onIncrementToMax","setSegment","onDecrementToMin","parser","$cIPI0$NumberParser","maximumFractionDigits","backspace","isValidPartialNumber","newValue","slice","parsed","parse","length","clearSegment","$cIPI0$isMac","metaKey","ctrlKey","shiftKey","startsWith","$cIPI0$useFilter","sensitivity","amPmFormatter","am","setHours","formatToParts","find","part","pm","eraFormatter","year","era","eras1","$cIPI0$toCalendar","$cIPI0$CalendarDate","calendar","eras","getEras","map","eraDate","day","toDate","parts","formatted","p","prefixLength","$32489daedd52963e$var$commonPrefixLength","era1","onInput","matched","numberValue","segmentValue","allowsZero","isNaN","shouldSetValue","Number","String","onFocus","$cIPI0$scrollIntoView","$cIPI0$getScrollParent","selection","getSelection","collapse","compositionRef","$cIPI0$useEvent","inputType","textContent","data","$cIPI0$useLayoutEffect","element","document","activeElement","touchPropOverrides","$cIPI0$isIOS","firstSegment","segments","s","name","$cIPI0$useLabels","segmentProps","contentEditable","suppressContentEditableWarning","spellCheck","autoCapitalize","autoCorrect","parseInt","$cIPI0$react","version","inputMode","tabIndex","style","caretColor","onPointerDown","onMouseDown","strings","sort","first","i","$887cac91b7cc8801$export$12fd5f0e9f4bb192","ref2","range","start","end","startFieldProps","endFieldProps","accept","commonFieldProps","setDateTime","dateRange","setDateRange","allowsNonContiguousRanges"],"sources":["/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/ar-AE.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/bg-BG.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/cs-CZ.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/da-DK.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/de-DE.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/el-GR.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/en-US.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/es-ES.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/et-EE.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/fi-FI.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/fr-FR.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/he-IL.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/hr-HR.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/hu-HU.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/it-IT.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/ja-JP.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/ko-KR.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/lt-LT.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/lv-LV.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/nb-NO.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/nl-NL.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/pl-PL.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/pt-BR.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/pt-PT.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/ro-RO.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/ru-RU.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/sk-SK.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/sl-SI.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/sr-SP.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/sv-SE.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/tr-TR.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/uk-UA.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/zh-CN.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/zh-TW.json","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/intl/*.js","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/src/useDatePickerGroup.ts","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/src/useDateField.ts","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/src/useDatePicker.ts","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/src/useDisplayNames.ts","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/src/useDateSegment.ts","/Users/k.chaganti/Desktop/b20/b20/node_modules/@react-aria/datepicker/dist/packages/@react-aria/datepicker/src/useDateRangePicker.ts"],"sourcesContent":["{\n  \"calendar\": \"التقويم\",\n  \"day\": \"يوم\",\n  \"dayPeriod\": \"ص/م\",\n  \"endDate\": \"تاريخ الانتهاء\",\n  \"era\": \"العصر\",\n  \"hour\": \"الساعات\",\n  \"minute\": \"الدقائق\",\n  \"month\": \"الشهر\",\n  \"second\": \"الثواني\",\n  \"selectedDateDescription\": \"تاريخ محدد: {date}\",\n  \"selectedRangeDescription\": \"المدى الزمني المحدد: {startDate} إلى {endDate}\",\n  \"selectedTimeDescription\": \"الوقت المحدد: {time}\",\n  \"startDate\": \"تاريخ البدء\",\n  \"timeZoneName\": \"التوقيت\",\n  \"weekday\": \"اليوم\",\n  \"year\": \"السنة\"\n}\n","{\n  \"calendar\": \"Календар\",\n  \"day\": \"ден\",\n  \"dayPeriod\": \"пр.об./сл.об.\",\n  \"endDate\": \"Крайна дата\",\n  \"era\": \"ера\",\n  \"hour\": \"час\",\n  \"minute\": \"минута\",\n  \"month\": \"месец\",\n  \"second\": \"секунда\",\n  \"selectedDateDescription\": \"Избрана дата: {date}\",\n  \"selectedRangeDescription\": \"Избран диапазон: {startDate} до {endDate}\",\n  \"selectedTimeDescription\": \"Избрано време: {time}\",\n  \"startDate\": \"Начална дата\",\n  \"timeZoneName\": \"часова зона\",\n  \"weekday\": \"ден от седмицата\",\n  \"year\": \"година\"\n}\n","{\n  \"calendar\": \"Kalendář\",\n  \"day\": \"den\",\n  \"dayPeriod\": \"část dne\",\n  \"endDate\": \"Konečné datum\",\n  \"era\": \"letopočet\",\n  \"hour\": \"hodina\",\n  \"minute\": \"minuta\",\n  \"month\": \"měsíc\",\n  \"second\": \"sekunda\",\n  \"selectedDateDescription\": \"Vybrané datum: {date}\",\n  \"selectedRangeDescription\": \"Vybrané období: {startDate} až {endDate}\",\n  \"selectedTimeDescription\": \"Vybraný čas: {time}\",\n  \"startDate\": \"Počáteční datum\",\n  \"timeZoneName\": \"časové pásmo\",\n  \"weekday\": \"den v týdnu\",\n  \"year\": \"rok\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"day\": \"dag\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Slutdato\",\n  \"era\": \"æra\",\n  \"hour\": \"time\",\n  \"minute\": \"minut\",\n  \"month\": \"måned\",\n  \"second\": \"sekund\",\n  \"selectedDateDescription\": \"Valgt dato: {date}\",\n  \"selectedRangeDescription\": \"Valgt interval: {startDate} til {endDate}\",\n  \"selectedTimeDescription\": \"Valgt tidspunkt: {time}\",\n  \"startDate\": \"Startdato\",\n  \"timeZoneName\": \"tidszone\",\n  \"weekday\": \"ugedag\",\n  \"year\": \"år\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"day\": \"Tag\",\n  \"dayPeriod\": \"Tageshälfte\",\n  \"endDate\": \"Enddatum\",\n  \"era\": \"Epoche\",\n  \"hour\": \"Stunde\",\n  \"minute\": \"Minute\",\n  \"month\": \"Monat\",\n  \"second\": \"Sekunde\",\n  \"selectedDateDescription\": \"Ausgewähltes Datum: {date}\",\n  \"selectedRangeDescription\": \"Ausgewählter Bereich: {startDate} bis {endDate}\",\n  \"selectedTimeDescription\": \"Ausgewählte Zeit: {time}\",\n  \"startDate\": \"Anfangsdatum\",\n  \"timeZoneName\": \"Zeitzone\",\n  \"weekday\": \"Wochentag\",\n  \"year\": \"Jahr\"\n}\n","{\n  \"calendar\": \"Ημερολόγιο\",\n  \"day\": \"ημέρα\",\n  \"dayPeriod\": \"π.μ./μ.μ.\",\n  \"endDate\": \"Ημερομηνία λήξης\",\n  \"era\": \"περίοδος\",\n  \"hour\": \"ώρα\",\n  \"minute\": \"λεπτό\",\n  \"month\": \"μήνας\",\n  \"second\": \"δευτερόλεπτο\",\n  \"selectedDateDescription\": \"Επιλεγμένη ημερομηνία: {date}\",\n  \"selectedRangeDescription\": \"Επιλεγμένο εύρος: {startDate} έως {endDate}\",\n  \"selectedTimeDescription\": \"Επιλεγμένη ώρα: {time}\",\n  \"startDate\": \"Ημερομηνία έναρξης\",\n  \"timeZoneName\": \"ζώνη ώρας\",\n  \"weekday\": \"καθημερινή\",\n  \"year\": \"έτος\"\n}\n","{\n  \"era\": \"era\",\n  \"year\": \"year\",\n  \"month\": \"month\",\n  \"day\": \"day\",\n  \"hour\": \"hour\",\n  \"minute\": \"minute\",\n  \"second\": \"second\",\n  \"dayPeriod\": \"AM/PM\",\n  \"calendar\": \"Calendar\",\n  \"startDate\": \"Start Date\",\n  \"endDate\": \"End Date\",\n  \"weekday\": \"day of the week\",\n  \"timeZoneName\": \"time zone\",\n  \"selectedDateDescription\": \"Selected Date: {date}\",\n  \"selectedRangeDescription\": \"Selected Range: {startDate} to {endDate}\",\n  \"selectedTimeDescription\": \"Selected Time: {time}\"\n}\n","{\n  \"calendar\": \"Calendario\",\n  \"day\": \"día\",\n  \"dayPeriod\": \"a. m./p. m.\",\n  \"endDate\": \"Fecha final\",\n  \"era\": \"era\",\n  \"hour\": \"hora\",\n  \"minute\": \"minuto\",\n  \"month\": \"mes\",\n  \"second\": \"segundo\",\n  \"selectedDateDescription\": \"Fecha seleccionada: {date}\",\n  \"selectedRangeDescription\": \"Rango seleccionado: {startDate} a {endDate}\",\n  \"selectedTimeDescription\": \"Hora seleccionada: {time}\",\n  \"startDate\": \"Fecha de inicio\",\n  \"timeZoneName\": \"zona horaria\",\n  \"weekday\": \"día de la semana\",\n  \"year\": \"año\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"day\": \"päev\",\n  \"dayPeriod\": \"enne/pärast lõunat\",\n  \"endDate\": \"Lõppkuupäev\",\n  \"era\": \"ajastu\",\n  \"hour\": \"tund\",\n  \"minute\": \"minut\",\n  \"month\": \"kuu\",\n  \"second\": \"sekund\",\n  \"selectedDateDescription\": \"Valitud kuupäev: {date}\",\n  \"selectedRangeDescription\": \"Valitud vahemik: {startDate} kuni {endDate}\",\n  \"selectedTimeDescription\": \"Valitud aeg: {time}\",\n  \"startDate\": \"Alguskuupäev\",\n  \"timeZoneName\": \"ajavöönd\",\n  \"weekday\": \"nädalapäev\",\n  \"year\": \"aasta\"\n}\n","{\n  \"calendar\": \"Kalenteri\",\n  \"day\": \"päivä\",\n  \"dayPeriod\": \"vuorokaudenaika\",\n  \"endDate\": \"Päättymispäivä\",\n  \"era\": \"aikakausi\",\n  \"hour\": \"tunti\",\n  \"minute\": \"minuutti\",\n  \"month\": \"kuukausi\",\n  \"second\": \"sekunti\",\n  \"selectedDateDescription\": \"Valittu päivämäärä: {date}\",\n  \"selectedRangeDescription\": \"Valittu aikaväli: {startDate} – {endDate}\",\n  \"selectedTimeDescription\": \"Valittu aika: {time}\",\n  \"startDate\": \"Alkamispäivä\",\n  \"timeZoneName\": \"aikavyöhyke\",\n  \"weekday\": \"viikonpäivä\",\n  \"year\": \"vuosi\"\n}\n","{\n  \"calendar\": \"Calendrier\",\n  \"day\": \"jour\",\n  \"dayPeriod\": \"cadran\",\n  \"endDate\": \"Date de fin\",\n  \"era\": \"ère\",\n  \"hour\": \"heure\",\n  \"minute\": \"minute\",\n  \"month\": \"mois\",\n  \"second\": \"seconde\",\n  \"selectedDateDescription\": \"Date sélectionnée : {date}\",\n  \"selectedRangeDescription\": \"Plage sélectionnée : {startDate} au {endDate}\",\n  \"selectedTimeDescription\": \"Heure choisie : {time}\",\n  \"startDate\": \"Date de début\",\n  \"timeZoneName\": \"fuseau horaire\",\n  \"weekday\": \"jour de la semaine\",\n  \"year\": \"année\"\n}\n","{\n  \"calendar\": \"לוח שנה\",\n  \"day\": \"יום\",\n  \"dayPeriod\": \"לפנה״צ/אחה״צ\",\n  \"endDate\": \"תאריך סיום\",\n  \"era\": \"תקופה\",\n  \"hour\": \"שעה\",\n  \"minute\": \"דקה\",\n  \"month\": \"חודש\",\n  \"second\": \"שנייה\",\n  \"selectedDateDescription\": \"תאריך נבחר: {date}\",\n  \"selectedRangeDescription\": \"טווח נבחר: {startDate} עד {endDate}\",\n  \"selectedTimeDescription\": \"זמן נבחר: {time}\",\n  \"startDate\": \"תאריך התחלה\",\n  \"timeZoneName\": \"אזור זמן\",\n  \"weekday\": \"יום בשבוע\",\n  \"year\": \"שנה\"\n}\n","{\n  \"calendar\": \"Kalendar\",\n  \"day\": \"dan\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Datum završetka\",\n  \"era\": \"era\",\n  \"hour\": \"sat\",\n  \"minute\": \"minuta\",\n  \"month\": \"mjesec\",\n  \"second\": \"sekunda\",\n  \"selectedDateDescription\": \"Odabrani datum: {date}\",\n  \"selectedRangeDescription\": \"Odabrani raspon: {startDate} do {endDate}\",\n  \"selectedTimeDescription\": \"Odabrano vrijeme: {time}\",\n  \"startDate\": \"Datum početka\",\n  \"timeZoneName\": \"vremenska zona\",\n  \"weekday\": \"dan u tjednu\",\n  \"year\": \"godina\"\n}\n","{\n  \"calendar\": \"Naptár\",\n  \"day\": \"nap\",\n  \"dayPeriod\": \"napszak\",\n  \"endDate\": \"Befejező dátum\",\n  \"era\": \"éra\",\n  \"hour\": \"óra\",\n  \"minute\": \"perc\",\n  \"month\": \"hónap\",\n  \"second\": \"másodperc\",\n  \"selectedDateDescription\": \"Kijelölt dátum: {date}\",\n  \"selectedRangeDescription\": \"Kijelölt tartomány: {startDate}–{endDate}\",\n  \"selectedTimeDescription\": \"Kijelölt idő: {time}\",\n  \"startDate\": \"Kezdő dátum\",\n  \"timeZoneName\": \"időzóna\",\n  \"weekday\": \"hét napja\",\n  \"year\": \"év\"\n}\n","{\n  \"calendar\": \"Calendario\",\n  \"day\": \"giorno\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Data finale\",\n  \"era\": \"era\",\n  \"hour\": \"ora\",\n  \"minute\": \"minuto\",\n  \"month\": \"mese\",\n  \"second\": \"secondo\",\n  \"selectedDateDescription\": \"Data selezionata: {date}\",\n  \"selectedRangeDescription\": \"Intervallo selezionato: da {startDate} a {endDate}\",\n  \"selectedTimeDescription\": \"Ora selezionata: {time}\",\n  \"startDate\": \"Data iniziale\",\n  \"timeZoneName\": \"fuso orario\",\n  \"weekday\": \"giorno della settimana\",\n  \"year\": \"anno\"\n}\n","{\n  \"calendar\": \"カレンダー\",\n  \"day\": \"日\",\n  \"dayPeriod\": \"午前/午後\",\n  \"endDate\": \"終了日\",\n  \"era\": \"時代\",\n  \"hour\": \"時\",\n  \"minute\": \"分\",\n  \"month\": \"月\",\n  \"second\": \"秒\",\n  \"selectedDateDescription\": \"選択した日付 : {date}\",\n  \"selectedRangeDescription\": \"選択範囲 : {startDate} から {endDate}\",\n  \"selectedTimeDescription\": \"選択した時間 : {time}\",\n  \"startDate\": \"開始日\",\n  \"timeZoneName\": \"タイムゾーン\",\n  \"weekday\": \"曜日\",\n  \"year\": \"年\"\n}\n","{\n  \"calendar\": \"달력\",\n  \"day\": \"일\",\n  \"dayPeriod\": \"오전/오후\",\n  \"endDate\": \"종료 날짜\",\n  \"era\": \"연호\",\n  \"hour\": \"시\",\n  \"minute\": \"분\",\n  \"month\": \"월\",\n  \"second\": \"초\",\n  \"selectedDateDescription\": \"선택 일자: {date}\",\n  \"selectedRangeDescription\": \"선택 범위: {startDate} ~ {endDate}\",\n  \"selectedTimeDescription\": \"선택 시간: {time}\",\n  \"startDate\": \"시작 날짜\",\n  \"timeZoneName\": \"시간대\",\n  \"weekday\": \"요일\",\n  \"year\": \"년\"\n}\n","{\n  \"calendar\": \"Kalendorius\",\n  \"day\": \"diena\",\n  \"dayPeriod\": \"iki pietų / po pietų\",\n  \"endDate\": \"Pabaigos data\",\n  \"era\": \"era\",\n  \"hour\": \"valanda\",\n  \"minute\": \"minutė\",\n  \"month\": \"mėnuo\",\n  \"second\": \"sekundė\",\n  \"selectedDateDescription\": \"Pasirinkta data: {date}\",\n  \"selectedRangeDescription\": \"Pasirinktas intervalas: nuo {startDate} iki {endDate}\",\n  \"selectedTimeDescription\": \"Pasirinktas laikas: {time}\",\n  \"startDate\": \"Pradžios data\",\n  \"timeZoneName\": \"laiko juosta\",\n  \"weekday\": \"savaitės diena\",\n  \"year\": \"metai\"\n}\n","{\n  \"calendar\": \"Kalendārs\",\n  \"day\": \"diena\",\n  \"dayPeriod\": \"priekšpusdienā/pēcpusdienā\",\n  \"endDate\": \"Beigu datums\",\n  \"era\": \"ēra\",\n  \"hour\": \"stundas\",\n  \"minute\": \"minūtes\",\n  \"month\": \"mēnesis\",\n  \"second\": \"sekundes\",\n  \"selectedDateDescription\": \"Atlasītais datums: {date}\",\n  \"selectedRangeDescription\": \"Atlasītais diapazons: no {startDate} līdz {endDate}\",\n  \"selectedTimeDescription\": \"Atlasītais laiks: {time}\",\n  \"startDate\": \"Sākuma datums\",\n  \"timeZoneName\": \"laika josla\",\n  \"weekday\": \"nedēļas diena\",\n  \"year\": \"gads\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"day\": \"dag\",\n  \"dayPeriod\": \"a.m./p.m.\",\n  \"endDate\": \"Sluttdato\",\n  \"era\": \"tidsalder\",\n  \"hour\": \"time\",\n  \"minute\": \"minutt\",\n  \"month\": \"måned\",\n  \"second\": \"sekund\",\n  \"selectedDateDescription\": \"Valgt dato: {date}\",\n  \"selectedRangeDescription\": \"Valgt område: {startDate} til {endDate}\",\n  \"selectedTimeDescription\": \"Valgt tid: {time}\",\n  \"startDate\": \"Startdato\",\n  \"timeZoneName\": \"tidssone\",\n  \"weekday\": \"ukedag\",\n  \"year\": \"år\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"day\": \"dag\",\n  \"dayPeriod\": \"a.m./p.m.\",\n  \"endDate\": \"Einddatum\",\n  \"era\": \"tijdperk\",\n  \"hour\": \"uur\",\n  \"minute\": \"minuut\",\n  \"month\": \"maand\",\n  \"second\": \"seconde\",\n  \"selectedDateDescription\": \"Geselecteerde datum: {date}\",\n  \"selectedRangeDescription\": \"Geselecteerd bereik: {startDate} tot {endDate}\",\n  \"selectedTimeDescription\": \"Geselecteerde tijd: {time}\",\n  \"startDate\": \"Startdatum\",\n  \"timeZoneName\": \"tijdzone\",\n  \"weekday\": \"dag van de week\",\n  \"year\": \"jaar\"\n}\n","{\n  \"calendar\": \"Kalendarz\",\n  \"day\": \"dzień\",\n  \"dayPeriod\": \"rano / po południu / wieczorem\",\n  \"endDate\": \"Data końcowa\",\n  \"era\": \"era\",\n  \"hour\": \"godzina\",\n  \"minute\": \"minuta\",\n  \"month\": \"miesiąc\",\n  \"second\": \"sekunda\",\n  \"selectedDateDescription\": \"Wybrana data: {date}\",\n  \"selectedRangeDescription\": \"Wybrany zakres: {startDate} do {endDate}\",\n  \"selectedTimeDescription\": \"Wybrany czas: {time}\",\n  \"startDate\": \"Data początkowa\",\n  \"timeZoneName\": \"strefa czasowa\",\n  \"weekday\": \"dzień tygodnia\",\n  \"year\": \"rok\"\n}\n","{\n  \"calendar\": \"Calendário\",\n  \"day\": \"dia\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Data final\",\n  \"era\": \"era\",\n  \"hour\": \"hora\",\n  \"minute\": \"minuto\",\n  \"month\": \"mês\",\n  \"second\": \"segundo\",\n  \"selectedDateDescription\": \"Data selecionada: {date}\",\n  \"selectedRangeDescription\": \"Intervalo selecionado: {startDate} a {endDate}\",\n  \"selectedTimeDescription\": \"Hora selecionada: {time}\",\n  \"startDate\": \"Data inicial\",\n  \"timeZoneName\": \"fuso horário\",\n  \"weekday\": \"dia da semana\",\n  \"year\": \"ano\"\n}\n","{\n  \"calendar\": \"Calendário\",\n  \"day\": \"dia\",\n  \"dayPeriod\": \"am/pm\",\n  \"endDate\": \"Data de Término\",\n  \"era\": \"era\",\n  \"hour\": \"hora\",\n  \"minute\": \"minuto\",\n  \"month\": \"mês\",\n  \"second\": \"segundo\",\n  \"selectedDateDescription\": \"Data selecionada: {date}\",\n  \"selectedRangeDescription\": \"Intervalo selecionado: {startDate} a {endDate}\",\n  \"selectedTimeDescription\": \"Hora selecionada: {time}\",\n  \"startDate\": \"Data de Início\",\n  \"timeZoneName\": \"fuso horário\",\n  \"weekday\": \"dia da semana\",\n  \"year\": \"ano\"\n}\n","{\n  \"calendar\": \"Calendar\",\n  \"day\": \"zi\",\n  \"dayPeriod\": \"a.m/p.m.\",\n  \"endDate\": \"Dată final\",\n  \"era\": \"eră\",\n  \"hour\": \"oră\",\n  \"minute\": \"minut\",\n  \"month\": \"lună\",\n  \"second\": \"secundă\",\n  \"selectedDateDescription\": \"Dată selectată: {date}\",\n  \"selectedRangeDescription\": \"Interval selectat: de la {startDate} până la {endDate}\",\n  \"selectedTimeDescription\": \"Ora selectată: {time}\",\n  \"startDate\": \"Dată început\",\n  \"timeZoneName\": \"fus orar\",\n  \"weekday\": \"ziua din săptămână\",\n  \"year\": \"an\"\n}\n","{\n  \"calendar\": \"Календарь\",\n  \"day\": \"день\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Дата окончания\",\n  \"era\": \"эра\",\n  \"hour\": \"час\",\n  \"minute\": \"минута\",\n  \"month\": \"месяц\",\n  \"second\": \"секунда\",\n  \"selectedDateDescription\": \"Выбранная дата: {date}\",\n  \"selectedRangeDescription\": \"Выбранный диапазон: с {startDate} по {endDate}\",\n  \"selectedTimeDescription\": \"Выбранное время: {time}\",\n  \"startDate\": \"Дата начала\",\n  \"timeZoneName\": \"часовой пояс\",\n  \"weekday\": \"день недели\",\n  \"year\": \"год\"\n}\n","{\n  \"calendar\": \"Kalendár\",\n  \"day\": \"deň\",\n  \"dayPeriod\": \"AM/PM\",\n  \"endDate\": \"Dátum ukončenia\",\n  \"era\": \"letopočet\",\n  \"hour\": \"hodina\",\n  \"minute\": \"minúta\",\n  \"month\": \"mesiac\",\n  \"second\": \"sekunda\",\n  \"selectedDateDescription\": \"Vybratý dátum: {date}\",\n  \"selectedRangeDescription\": \"Vybratý rozsah: od {startDate} do {endDate}\",\n  \"selectedTimeDescription\": \"Vybratý čas: {time}\",\n  \"startDate\": \"Dátum začatia\",\n  \"timeZoneName\": \"časové pásmo\",\n  \"weekday\": \"deň týždňa\",\n  \"year\": \"rok\"\n}\n","{\n  \"calendar\": \"Koledar\",\n  \"day\": \"dan\",\n  \"dayPeriod\": \"dop/pop\",\n  \"endDate\": \"Datum konca\",\n  \"era\": \"doba\",\n  \"hour\": \"ura\",\n  \"minute\": \"minuta\",\n  \"month\": \"mesec\",\n  \"second\": \"sekunda\",\n  \"selectedDateDescription\": \"Izbrani datum: {date}\",\n  \"selectedRangeDescription\": \"Izbrano območje: {startDate} do {endDate}\",\n  \"selectedTimeDescription\": \"Izbrani čas: {time}\",\n  \"startDate\": \"Datum začetka\",\n  \"timeZoneName\": \"časovni pas\",\n  \"weekday\": \"dan v tednu\",\n  \"year\": \"leto\"\n}\n","{\n  \"calendar\": \"Kalendar\",\n  \"day\": \"дан\",\n  \"dayPeriod\": \"пре подне/по подне\",\n  \"endDate\": \"Datum završetka\",\n  \"era\": \"ера\",\n  \"hour\": \"сат\",\n  \"minute\": \"минут\",\n  \"month\": \"месец\",\n  \"second\": \"секунд\",\n  \"selectedDateDescription\": \"Izabrani datum: {date}\",\n  \"selectedRangeDescription\": \"Izabrani opseg: od {startDate} do {endDate}\",\n  \"selectedTimeDescription\": \"Izabrano vreme: {time}\",\n  \"startDate\": \"Datum početka\",\n  \"timeZoneName\": \"временска зона\",\n  \"weekday\": \"дан у недељи\",\n  \"year\": \"година\"\n}\n","{\n  \"calendar\": \"Kalender\",\n  \"day\": \"dag\",\n  \"dayPeriod\": \"fm/em\",\n  \"endDate\": \"Slutdatum\",\n  \"era\": \"era\",\n  \"hour\": \"timme\",\n  \"minute\": \"minut\",\n  \"month\": \"månad\",\n  \"second\": \"sekund\",\n  \"selectedDateDescription\": \"Valt datum: {date}\",\n  \"selectedRangeDescription\": \"Valt intervall: {startDate} till {endDate}\",\n  \"selectedTimeDescription\": \"Vald tid: {time}\",\n  \"startDate\": \"Startdatum\",\n  \"timeZoneName\": \"tidszon\",\n  \"weekday\": \"veckodag\",\n  \"year\": \"år\"\n}\n","{\n  \"calendar\": \"Takvim\",\n  \"day\": \"gün\",\n  \"dayPeriod\": \"ÖÖ/ÖS\",\n  \"endDate\": \"Bitiş Tarihi\",\n  \"era\": \"çağ\",\n  \"hour\": \"saat\",\n  \"minute\": \"dakika\",\n  \"month\": \"ay\",\n  \"second\": \"saniye\",\n  \"selectedDateDescription\": \"Seçilen Tarih: {date}\",\n  \"selectedRangeDescription\": \"Seçilen Aralık: {startDate} - {endDate}\",\n  \"selectedTimeDescription\": \"Seçilen Zaman: {time}\",\n  \"startDate\": \"Başlangıç Tarihi\",\n  \"timeZoneName\": \"saat dilimi\",\n  \"weekday\": \"haftanın günü\",\n  \"year\": \"yıl\"\n}\n","{\n  \"calendar\": \"Календар\",\n  \"day\": \"день\",\n  \"dayPeriod\": \"дп/пп\",\n  \"endDate\": \"Дата завершення\",\n  \"era\": \"ера\",\n  \"hour\": \"година\",\n  \"minute\": \"хвилина\",\n  \"month\": \"місяць\",\n  \"second\": \"секунда\",\n  \"selectedDateDescription\": \"Вибрана дата: {date}\",\n  \"selectedRangeDescription\": \"Вибраний діапазон: {startDate} — {endDate}\",\n  \"selectedTimeDescription\": \"Вибраний час: {time}\",\n  \"startDate\": \"Дата початку\",\n  \"timeZoneName\": \"часовий пояс\",\n  \"weekday\": \"день тижня\",\n  \"year\": \"рік\"\n}\n","{\n  \"calendar\": \"日历\",\n  \"day\": \"日\",\n  \"dayPeriod\": \"上午/下午\",\n  \"endDate\": \"结束日期\",\n  \"era\": \"纪元\",\n  \"hour\": \"小时\",\n  \"minute\": \"分钟\",\n  \"month\": \"月\",\n  \"second\": \"秒\",\n  \"selectedDateDescription\": \"选定的日期：{date}\",\n  \"selectedRangeDescription\": \"选定的范围：{startDate} 至 {endDate}\",\n  \"selectedTimeDescription\": \"选定的时间：{time}\",\n  \"startDate\": \"开始日期\",\n  \"timeZoneName\": \"时区\",\n  \"weekday\": \"工作日\",\n  \"year\": \"年\"\n}\n","{\n  \"calendar\": \"日曆\",\n  \"day\": \"日\",\n  \"dayPeriod\": \"上午/下午\",\n  \"endDate\": \"結束日期\",\n  \"era\": \"纪元\",\n  \"hour\": \"小时\",\n  \"minute\": \"分钟\",\n  \"month\": \"月\",\n  \"second\": \"秒\",\n  \"selectedDateDescription\": \"選定的日期：{date}\",\n  \"selectedRangeDescription\": \"選定的範圍：{startDate} 至 {endDate}\",\n  \"selectedTimeDescription\": \"選定的時間：{time}\",\n  \"startDate\": \"開始日期\",\n  \"timeZoneName\": \"时区\",\n  \"weekday\": \"工作日\",\n  \"year\": \"年\"\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","import {createFocusManager, getFocusableTreeWalker} from '@react-aria/focus';\nimport {DateFieldState, DatePickerState, DateRangePickerState} from '@react-stately/datepicker';\nimport {FocusableElement, KeyboardEvent} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport {RefObject, useMemo} from 'react';\nimport {useLocale} from '@react-aria/i18n';\nimport {usePress} from '@react-aria/interactions';\n\nexport function useDatePickerGroup(state: DatePickerState | DateRangePickerState | DateFieldState, ref: RefObject<Element>, disableArrowNavigation?: boolean) {\n  let {direction} = useLocale();\n  let focusManager = useMemo(() => createFocusManager(ref), [ref]);\n\n  // Open the popover on alt + arrow down\n  let onKeyDown = (e: KeyboardEvent) => {\n    if (e.altKey && (e.key === 'ArrowDown' || e.key === 'ArrowUp') && 'setOpen' in state) {\n      e.preventDefault();\n      e.stopPropagation();\n      state.setOpen(true);\n    }\n\n    if (disableArrowNavigation) {\n      return;\n    }\n\n    switch (e.key) {\n      case 'ArrowLeft':\n        e.preventDefault();\n        e.stopPropagation();\n        if (direction === 'rtl') {\n          focusManager.focusNext();\n        } else {\n          focusManager.focusPrevious();\n        }\n        break;\n      case 'ArrowRight':\n        e.preventDefault();\n        e.stopPropagation();\n        if (direction === 'rtl') {\n          focusManager.focusPrevious();\n        } else {\n          focusManager.focusNext();\n        }\n        break;\n    }\n  };\n\n  // Focus the first placeholder segment from the end on mouse down/touch up in the field.\n  let focusLast = () => {\n    // Try to find the segment prior to the element that was clicked on.\n    let target = window.event?.target as FocusableElement;\n    let walker = getFocusableTreeWalker(ref.current, {tabbable: true});\n    if (target) {\n      walker.currentNode = target;\n      target = walker.previousNode() as FocusableElement;\n    }\n\n    // If no target found, find the last element from the end.\n    if (!target) {\n      let last: FocusableElement;\n      do {\n        last = walker.lastChild() as FocusableElement;\n        if (last) {\n          target = last;\n        }\n      } while (last);\n    }\n\n    // Now go backwards until we find an element that is not a placeholder.\n    while (target?.hasAttribute('data-placeholder')) {\n      let prev = walker.previousNode() as FocusableElement;\n      if (prev && prev.hasAttribute('data-placeholder')) {\n        target = prev;\n      } else {\n        break;\n      }\n    }\n\n    if (target) {\n      target.focus();\n    }\n  };\n\n  let {pressProps} = usePress({\n    preventFocusOnPress: true,\n    allowTextSelectionOnPress: true,\n    onPressStart(e) {\n      if (e.pointerType === 'mouse') {\n        focusLast();\n      }\n    },\n    onPress(e) {\n      if (e.pointerType !== 'mouse') {\n        focusLast();\n      }\n    }\n  });\n\n  return mergeProps(pressProps, {onKeyDown});\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaDatePickerProps, AriaTimeFieldProps, DateValue, TimeValue} from '@react-types/datepicker';\nimport {createFocusManager, FocusManager} from '@react-aria/focus';\nimport {DateFieldState} from '@react-stately/datepicker';\nimport {DOMAttributes} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useDescription} from '@react-aria/utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {RefObject, useEffect, useMemo, useRef} from 'react';\nimport {useDatePickerGroup} from './useDatePickerGroup';\nimport {useField} from '@react-aria/label';\nimport {useFocusWithin} from '@react-aria/interactions';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\n// Allows this hook to also be used with TimeField\nexport interface AriaDateFieldProps<T extends DateValue> extends Omit<AriaDatePickerProps<T>, 'value' | 'defaultValue' | 'onChange' | 'minValue' | 'maxValue' | 'placeholderValue'> {}\n\nexport interface DateFieldAria {\n   /** Props for the field's visible label element, if any. */\n  labelProps: DOMAttributes,\n   /** Props for the field grouping element. */\n  fieldProps: DOMAttributes,\n  /** Props for the description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the error message element, if any. */\n  errorMessageProps: DOMAttributes\n}\n\n// Data that is passed between useDateField and useDateSegment.\ninterface HookData {\n  ariaLabel: string,\n  ariaLabelledBy: string,\n  ariaDescribedBy: string,\n  focusManager: FocusManager\n}\n\nexport const hookData = new WeakMap<DateFieldState, HookData>();\n\n// Private props that we pass from useDatePicker/useDateRangePicker.\n// Ideally we'd use a Symbol for this, but React doesn't support them: https://github.com/facebook/react/issues/7552\nexport const roleSymbol = '__role_' + Date.now();\nexport const focusManagerSymbol = '__focusManager_' + Date.now();\n\n/**\n * Provides the behavior and accessibility implementation for a date field component.\n * A date field allows users to enter and edit date and time values using a keyboard.\n * Each part of a date value is displayed in an individually editable segment.\n */\nexport function useDateField<T extends DateValue>(props: AriaDateFieldProps<T>, state: DateFieldState, ref: RefObject<Element>): DateFieldAria {\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    labelElementType: 'span'\n  });\n\n  let {focusWithinProps} = useFocusWithin({\n    onBlurWithin() {\n      state.confirmPlaceholder();\n    }\n  });\n\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n  let message = state.maxGranularity === 'hour' ? 'selectedTimeDescription' : 'selectedDateDescription';\n  let field = state.maxGranularity === 'hour' ? 'time' : 'date';\n  let description = state.value ? stringFormatter.format(message, {[field]: state.formatValue({month: 'long'})}) : '';\n  let descProps = useDescription(description);\n\n  // If within a date picker or date range picker, the date field will have role=\"presentation\" and an aria-describedby\n  // will be passed in that references the value (e.g. entire range). Otherwise, add the field's value description.\n  let describedBy = props[roleSymbol] === 'presentation'\n    ? fieldProps['aria-describedby']\n    : [descProps['aria-describedby'], fieldProps['aria-describedby']].filter(Boolean).join(' ') || undefined;\n  let propsFocusManager = props[focusManagerSymbol];\n  let focusManager = useMemo(() => propsFocusManager || createFocusManager(ref), [propsFocusManager, ref]);\n  let groupProps = useDatePickerGroup(state, ref, props[roleSymbol] === 'presentation');\n\n  // Pass labels and other information to segments.\n  hookData.set(state, {\n    ariaLabel: props['aria-label'],\n    ariaLabelledBy: [props['aria-labelledby'], labelProps.id].filter(Boolean).join(' ') || undefined,\n    ariaDescribedBy: describedBy,\n    focusManager\n  });\n\n  let autoFocusRef = useRef(props.autoFocus);\n\n  // When used within a date picker or date range picker, the field gets role=\"presentation\"\n  // rather than role=\"group\". Since the date picker/date range picker already has a role=\"group\"\n  // with a label and description, and the segments are already labeled by this as well, this\n  // avoids very verbose duplicate announcements.\n  let fieldDOMProps: DOMAttributes;\n  if (props[roleSymbol] === 'presentation') {\n    fieldDOMProps = {\n      role: 'presentation'\n    };\n  } else {\n    fieldDOMProps = mergeProps(fieldProps, {\n      role: 'group',\n      'aria-disabled': props.isDisabled || undefined,\n      'aria-describedby': describedBy\n    });\n  }\n\n  useEffect(() => {\n    if (autoFocusRef.current) {\n      focusManager.focusFirst();\n    }\n    autoFocusRef.current = false;\n  }, [focusManager]);\n\n  let domProps = filterDOMProps(props);\n  return {\n    labelProps: {\n      ...labelProps,\n      onClick: () => {\n        focusManager.focusFirst();\n      }\n    },\n    fieldProps: mergeProps(domProps, fieldDOMProps, groupProps, focusWithinProps),\n    descriptionProps,\n    errorMessageProps\n  };\n}\n\n/**\n * Provides the behavior and accessibility implementation for a time field component.\n * A time field allows users to enter and edit time values using a keyboard.\n * Each part of a time value is displayed in an individually editable segment.\n */\nexport function useTimeField<T extends TimeValue>(props: AriaTimeFieldProps<T>, state: DateFieldState, ref: RefObject<Element>): DateFieldAria {\n  return useDateField(props, state, ref);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {AriaDatePickerProps, DateValue} from '@react-types/datepicker';\nimport {AriaDialogProps} from '@react-types/dialog';\nimport {CalendarProps} from '@react-types/calendar';\nimport {createFocusManager} from '@react-aria/focus';\nimport {DatePickerState} from '@react-stately/datepicker';\nimport {DOMAttributes} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useDescription, useId} from '@react-aria/utils';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {RefObject, useMemo} from 'react';\nimport {roleSymbol} from './useDateField';\nimport {useDatePickerGroup} from './useDatePickerGroup';\nimport {useField} from '@react-aria/label';\nimport {useLocale, useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface DatePickerAria {\n  /** Props for the date picker's visible label element, if any. */\n  labelProps: DOMAttributes,\n  /** Props for the grouping element containing the date field and button. */\n  groupProps: DOMAttributes,\n  /** Props for the date field. */\n  fieldProps: AriaDatePickerProps<DateValue>,\n  /** Props for the popover trigger button. */\n  buttonProps: AriaButtonProps,\n  /** Props for the description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the error message element, if any. */\n  errorMessageProps: DOMAttributes,\n  /** Props for the popover dialog. */\n  dialogProps: AriaDialogProps,\n  /** Props for the calendar within the popover dialog. */\n  calendarProps: CalendarProps<DateValue>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a date picker component.\n * A date picker combines a DateField and a Calendar popover to allow users to enter or select a date and time value.\n */\nexport function useDatePicker<T extends DateValue>(props: AriaDatePickerProps<T>, state: DatePickerState, ref: RefObject<Element>): DatePickerAria {\n  let buttonId = useId();\n  let dialogId = useId();\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    labelElementType: 'span'\n  });\n\n  let groupProps = useDatePickerGroup(state, ref);\n\n  let labelledBy = fieldProps['aria-labelledby'] || fieldProps.id;\n\n  let {locale} = useLocale();\n  let date = state.formatValue(locale, {month: 'long'});\n  let description = date ? stringFormatter.format('selectedDateDescription', {date}) : '';\n  let descProps = useDescription(description);\n  let ariaDescribedBy = [descProps['aria-describedby'], fieldProps['aria-describedby']].filter(Boolean).join(' ') || undefined;\n  let domProps = filterDOMProps(props);\n  let focusManager = useMemo(() => createFocusManager(ref), [ref]);\n\n  return {\n    groupProps: mergeProps(domProps, groupProps, fieldProps, descProps, {\n      role: 'group',\n      'aria-disabled': props.isDisabled || null,\n      'aria-labelledby': labelledBy,\n      'aria-describedby': ariaDescribedBy\n    }),\n    labelProps: {\n      ...labelProps,\n      onClick: () => {\n        focusManager.focusFirst();\n      }\n    },\n    fieldProps: {\n      ...fieldProps,\n      [roleSymbol]: 'presentation',\n      'aria-describedby': ariaDescribedBy,\n      value: state.value,\n      onChange: state.setValue,\n      minValue: props.minValue,\n      maxValue: props.maxValue,\n      placeholderValue: props.placeholderValue,\n      hideTimeZone: props.hideTimeZone,\n      hourCycle: props.hourCycle,\n      granularity: props.granularity,\n      isDisabled: props.isDisabled,\n      isReadOnly: props.isReadOnly,\n      isRequired: props.isRequired,\n      validationState: state.validationState,\n      autoFocus: props.autoFocus\n    },\n    descriptionProps,\n    errorMessageProps,\n    buttonProps: {\n      ...descProps,\n      id: buttonId,\n      'aria-haspopup': 'dialog',\n      'aria-label': stringFormatter.format('calendar'),\n      'aria-labelledby': `${labelledBy} ${buttonId}`,\n      'aria-describedby': ariaDescribedBy,\n      onPress: () => state.setOpen(true)\n    },\n    dialogProps: {\n      id: dialogId,\n      'aria-labelledby': `${labelledBy} ${buttonId}`\n    },\n    calendarProps: {\n      autoFocus: true,\n      value: state.dateValue,\n      onChange: state.setDateValue,\n      minValue: props.minValue,\n      maxValue: props.maxValue,\n      isDisabled: props.isDisabled,\n      isReadOnly: props.isReadOnly,\n      isDateUnavailable: props.isDateUnavailable,\n      defaultFocusedValue: state.dateValue ? undefined : props.placeholderValue,\n      validationState: state.validationState,\n      errorMessage: props.errorMessage\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {LocalizedStringDictionary} from '@internationalized/string';\nimport {useLocale} from '@react-aria/i18n';\nimport {useMemo} from 'react';\n\ntype Field = 'era' | 'year' | 'month' | 'day' | 'hour' | 'minute' | 'second' | 'dayPeriod' | 'timeZoneName' | 'weekday';\ninterface DisplayNames {\n  of(field: Field): string\n}\n\n/** @private */\nexport function useDisplayNames(): DisplayNames {\n  let {locale} = useLocale();\n  return useMemo(() => {\n    // Try to use Intl.DisplayNames if possible. It may be supported in browsers, but not support the dateTimeField\n    // type as that was only added in v2. https://github.com/tc39/intl-displaynames-v2\n    try {\n      // @ts-ignore\n      return new Intl.DisplayNames(locale, {type: 'dateTimeField'});\n    } catch (err) {\n      return new DisplayNamesPolyfill(locale);\n    }\n  }, [locale]);\n}\n\nclass DisplayNamesPolyfill implements DisplayNames {\n  private locale: string;\n  private dictionary: LocalizedStringDictionary<Field, string>;\n\n  constructor(locale: string) {\n    this.locale = locale;\n    this.dictionary = new LocalizedStringDictionary<Field, string>(intlMessages);\n  }\n\n  of(field: Field): string {\n    return this.dictionary.getStringForLocale(field, this.locale);\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CalendarDate, toCalendar} from '@internationalized/date';\nimport {DateFieldState, DateSegment} from '@react-stately/datepicker';\nimport {DOMAttributes} from '@react-types/shared';\nimport {getScrollParent, isIOS, isMac, mergeProps, scrollIntoView, useEvent, useId, useLabels, useLayoutEffect} from '@react-aria/utils';\nimport {hookData} from './useDateField';\nimport {NumberParser} from '@internationalized/number';\nimport React, {RefObject, useMemo, useRef} from 'react';\nimport {useDateFormatter, useFilter, useLocale} from '@react-aria/i18n';\nimport {useDisplayNames} from './useDisplayNames';\nimport {useSpinButton} from '@react-aria/spinbutton';\n\nexport interface DateSegmentAria {\n  /** Props for the segment element. */\n  segmentProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a segment in a date field.\n * A date segment displays an individual unit of a date and time, and allows users to edit\n * the value by typing or using the arrow keys to increment and decrement.\n */\nexport function useDateSegment(segment: DateSegment, state: DateFieldState, ref: RefObject<HTMLElement>): DateSegmentAria {\n  let enteredKeys = useRef('');\n  let {locale} = useLocale();\n  let displayNames = useDisplayNames();\n  let {ariaLabel, ariaLabelledBy, ariaDescribedBy, focusManager} = hookData.get(state);\n\n  let textValue = segment.isPlaceholder ? '' : segment.text;\n  let options = useMemo(() => state.dateFormatter.resolvedOptions(), [state.dateFormatter]);\n  let monthDateFormatter = useDateFormatter({month: 'long', timeZone: options.timeZone});\n  let hourDateFormatter = useDateFormatter({\n    hour: 'numeric',\n    hour12: options.hour12,\n    timeZone: options.timeZone\n  });\n\n  if (segment.type === 'month' && !segment.isPlaceholder) {\n    let monthTextValue = monthDateFormatter.format(state.dateValue);\n    textValue = monthTextValue !== textValue ? `${textValue} – ${monthTextValue}` : monthTextValue;\n  } else if (segment.type === 'hour' && !segment.isPlaceholder) {\n    textValue = hourDateFormatter.format(state.dateValue);\n  }\n\n  let {spinButtonProps} = useSpinButton({\n    // The ARIA spec says aria-valuenow is optional if there's no value, but aXe seems to require it.\n    // This doesn't seem to have any negative effects with real AT since we also use aria-valuetext.\n    // https://github.com/dequelabs/axe-core/issues/3505\n    value: segment.value,\n    textValue,\n    minValue: segment.minValue,\n    maxValue: segment.maxValue,\n    isDisabled: state.isDisabled,\n    isReadOnly: state.isReadOnly || !segment.isEditable,\n    isRequired: state.isRequired,\n    onIncrement: () => {\n      enteredKeys.current = '';\n      state.increment(segment.type);\n    },\n    onDecrement: () => {\n      enteredKeys.current = '';\n      state.decrement(segment.type);\n    },\n    onIncrementPage: () => {\n      enteredKeys.current = '';\n      state.incrementPage(segment.type);\n    },\n    onDecrementPage: () => {\n      enteredKeys.current = '';\n      state.decrementPage(segment.type);\n    },\n    onIncrementToMax: () => {\n      enteredKeys.current = '';\n      state.setSegment(segment.type, segment.maxValue);\n    },\n    onDecrementToMin: () => {\n      enteredKeys.current = '';\n      state.setSegment(segment.type, segment.minValue);\n    }\n  });\n\n  let parser = useMemo(() => new NumberParser(locale, {maximumFractionDigits: 0}), [locale]);\n\n  let backspace = () => {\n    if (parser.isValidPartialNumber(segment.text) && !state.isReadOnly && !segment.isPlaceholder) {\n      let newValue = segment.text.slice(0, -1);\n      let parsed = parser.parse(newValue);\n      if (newValue.length === 0 || parsed === 0) {\n        state.clearSegment(segment.type);\n      } else {\n        state.setSegment(segment.type, parsed);\n      }\n      enteredKeys.current = newValue;\n    } else if (segment.type === 'dayPeriod') {\n      state.clearSegment(segment.type);\n    }\n  };\n\n  let onKeyDown = (e) => {\n    // Firefox does not fire selectstart for Ctrl/Cmd + A\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1742153\n    if (e.key === 'a' && (isMac() ? e.metaKey : e.ctrlKey)) {\n      e.preventDefault();\n    }\n\n    if (e.ctrlKey || e.metaKey || e.shiftKey || e.altKey) {\n      return;\n    }\n\n    switch (e.key) {\n      case 'Backspace':\n      case 'Delete': {\n        // Safari on iOS does not fire beforeinput for the backspace key because the cursor is at the start.\n        e.preventDefault();\n        e.stopPropagation();\n        backspace();\n        break;\n      }\n    }\n  };\n\n  // Safari dayPeriod option doesn't work...\n  let {startsWith} = useFilter({sensitivity: 'base'});\n  let amPmFormatter = useDateFormatter({hour: 'numeric', hour12: true});\n  let am = useMemo(() => {\n    let date = new Date();\n    date.setHours(0);\n    return amPmFormatter.formatToParts(date).find(part => part.type === 'dayPeriod').value;\n  }, [amPmFormatter]);\n\n  let pm = useMemo(() => {\n    let date = new Date();\n    date.setHours(12);\n    return amPmFormatter.formatToParts(date).find(part => part.type === 'dayPeriod').value;\n  }, [amPmFormatter]);\n\n  // Get a list of formatted era names so users can type the first character to choose one.\n  let eraFormatter = useDateFormatter({year: 'numeric', era: 'narrow', timeZone: 'UTC'});\n  let eras = useMemo(() => {\n    if (segment.type !== 'era') {\n      return [];\n    }\n\n    let date = toCalendar(new CalendarDate(1, 1, 1), state.calendar);\n    let eras = state.calendar.getEras().map(era => {\n      let eraDate = date.set({year: 1, month: 1, day: 1, era}).toDate('UTC');\n      let parts = eraFormatter.formatToParts(eraDate);\n      let formatted = parts.find(p => p.type === 'era').value;\n      return {era, formatted};\n    });\n\n    // Remove the common prefix from formatted values. This is so that in calendars with eras like\n    // ERA0 and ERA1 (e.g. Ethiopic), users can press \"0\" and \"1\" to select an era. In other cases,\n    // the first letter is used.\n    let prefixLength = commonPrefixLength(eras.map(era => era.formatted));\n    if (prefixLength) {\n      for (let era of eras) {\n        era.formatted = era.formatted.slice(prefixLength);\n      }\n    }\n\n    return eras;\n  }, [eraFormatter, state.calendar, segment.type]);\n\n  let onInput = (key: string) => {\n    if (state.isDisabled || state.isReadOnly) {\n      return;\n    }\n\n    let newValue = enteredKeys.current + key;\n\n    switch (segment.type) {\n      case 'dayPeriod':\n        if (startsWith(am, key)) {\n          state.setSegment('dayPeriod', 0);\n        } else if (startsWith(pm, key)) {\n          state.setSegment('dayPeriod', 12);\n        } else {\n          break;\n        }\n        focusManager.focusNext();\n        break;\n      case 'era': {\n        let matched = eras.find(e => startsWith(e.formatted, key));\n        if (matched) {\n          state.setSegment('era', matched.era);\n          focusManager.focusNext();\n        }\n        break;\n      }\n      case 'day':\n      case 'hour':\n      case 'minute':\n      case 'second':\n      case 'month':\n      case 'year': {\n        if (!parser.isValidPartialNumber(newValue)) {\n          return;\n        }\n\n        let numberValue = parser.parse(newValue);\n        let segmentValue = numberValue;\n        let allowsZero = segment.minValue === 0;\n        if (segment.type === 'hour' && state.dateFormatter.resolvedOptions().hour12) {\n          switch (state.dateFormatter.resolvedOptions().hourCycle) {\n            case 'h11':\n              if (numberValue > 11) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n            case 'h12':\n              allowsZero = false;\n              if (numberValue > 12) {\n                segmentValue = parser.parse(key);\n              }\n              break;\n          }\n\n          if (segment.value >= 12 && numberValue > 1) {\n            numberValue += 12;\n          }\n        } else if (numberValue > segment.maxValue) {\n          segmentValue = parser.parse(key);\n        }\n\n        if (isNaN(numberValue)) {\n          return;\n        }\n\n        let shouldSetValue = segmentValue !== 0 || allowsZero;\n        if (shouldSetValue) {\n          state.setSegment(segment.type, segmentValue);\n        }\n\n        if (Number(numberValue + '0') > segment.maxValue || newValue.length >= String(segment.maxValue).length) {\n          enteredKeys.current = '';\n          if (shouldSetValue) {\n            focusManager.focusNext();\n          }\n        } else {\n          enteredKeys.current = newValue;\n        }\n        break;\n      }\n    }\n  };\n\n  let onFocus = () => {\n    enteredKeys.current = '';\n    scrollIntoView(getScrollParent(ref.current) as HTMLElement, ref.current);\n\n    // Collapse selection to start or Chrome won't fire input events.\n    let selection = window.getSelection();\n    selection.collapse(ref.current);\n  };\n\n  let compositionRef = useRef('');\n  // @ts-ignore - TODO: possibly old TS version? doesn't fail in my editor...\n  useEvent(ref, 'beforeinput', e => {\n    e.preventDefault();\n\n    switch (e.inputType) {\n      case 'deleteContentBackward':\n      case 'deleteContentForward':\n        if (parser.isValidPartialNumber(segment.text) && !state.isReadOnly) {\n          backspace();\n        }\n        break;\n      case 'insertCompositionText':\n        // insertCompositionText cannot be canceled.\n        // Record the current state of the element so we can restore it in the `input` event below.\n        compositionRef.current = ref.current.textContent;\n\n        // Safari gets stuck in a composition state unless we also assign to the value here.\n        // eslint-disable-next-line no-self-assign\n        ref.current.textContent = ref.current.textContent;\n        break;\n      default:\n        if (e.data != null) {\n          onInput(e.data);\n        }\n        break;\n    }\n  });\n\n  useEvent(ref, 'input', (e: InputEvent) => {\n    let {inputType, data} = e;\n    switch (inputType) {\n      case 'insertCompositionText':\n        // Reset the DOM to how it was in the beforeinput event.\n        ref.current.textContent = compositionRef.current;\n\n        // Android sometimes fires key presses of letters as composition events. Need to handle am/pm keys here too.\n        // Can also happen e.g. with Pinyin keyboard on iOS.\n        if (startsWith(am, data) || startsWith(pm, data)) {\n          onInput(data);\n        }\n        break;\n    }\n  });\n\n  useLayoutEffect(() => {\n    let element = ref.current;\n    return () => {\n      // If the focused segment is removed, focus the previous one, or the next one if there was no previous one.\n      if (document.activeElement === element) {\n        let prev = focusManager.focusPrevious();\n        if (!prev) {\n          focusManager.focusNext();\n        }\n      }\n    };\n  }, [ref, focusManager]);\n\n  // spinbuttons cannot be focused with VoiceOver on iOS.\n  let touchPropOverrides = isIOS() || segment.type === 'timeZoneName' ? {\n    role: 'textbox',\n    'aria-valuemax': null,\n    'aria-valuemin': null,\n    'aria-valuetext': null,\n    'aria-valuenow': null\n  } : {};\n\n  // Only apply aria-describedby to the first segment, unless the field is invalid. This avoids it being\n  // read every time the user navigates to a new segment.\n  let firstSegment = useMemo(() => state.segments.find(s => s.isEditable), [state.segments]);\n  if (segment !== firstSegment && state.validationState !== 'invalid') {\n    ariaDescribedBy = undefined;\n  }\n\n  let id = useId();\n  let isEditable = !state.isDisabled && !state.isReadOnly && segment.isEditable;\n\n  // Prepend the label passed from the field to each segment name.\n  // This is needed because VoiceOver on iOS does not announce groups.\n  let name = segment.type === 'literal' ? '' : displayNames.of(segment.type);\n  let labelProps = useLabels({\n    'aria-label': (ariaLabel ? ariaLabel + ' ' : '') + name,\n    'aria-labelledby': ariaLabelledBy\n  });\n\n  // Literal segments should not be visible to screen readers. We don't really need any of the above,\n  // but the rules of hooks mean hooks cannot be conditional so we have to put this condition here.\n  if (segment.type === 'literal') {\n    return {\n      segmentProps: {\n        'aria-hidden': true\n      }\n    };\n  }\n\n  return {\n    segmentProps: mergeProps(spinButtonProps, labelProps, {\n      id,\n      ...touchPropOverrides,\n      'aria-invalid': state.validationState === 'invalid' ? 'true' : undefined,\n      'aria-describedby': ariaDescribedBy,\n      'aria-readonly': state.isReadOnly || !segment.isEditable ? 'true' : undefined,\n      'data-placeholder': segment.isPlaceholder || undefined,\n      contentEditable: isEditable,\n      suppressContentEditableWarning: isEditable,\n      spellCheck: isEditable ? 'false' : undefined,\n      autoCapitalize: isEditable ? 'off' : undefined,\n      autoCorrect: isEditable ? 'off' : undefined,\n      // Capitalization was changed in React 17...\n      [parseInt(React.version, 10) >= 17 ? 'enterKeyHint' : 'enterkeyhint']: isEditable ? 'next' : undefined,\n      inputMode: state.isDisabled || segment.type === 'dayPeriod' || segment.type === 'era' || !isEditable ? undefined : 'numeric',\n      tabIndex: state.isDisabled ? undefined : 0,\n      onKeyDown,\n      onFocus,\n      style: {\n        caretColor: 'transparent'\n      },\n      // Prevent pointer events from reaching useDatePickerGroup, and allow native browser behavior to focus the segment.\n      onPointerDown(e) {\n        e.stopPropagation();\n      },\n      onMouseDown(e) {\n        e.stopPropagation();\n      }\n    })\n  };\n}\n\nfunction commonPrefixLength(strings: string[]): number {\n  // Sort the strings, and compare the characters in the first and last to find the common prefix.\n  strings.sort();\n  let first = strings[0];\n  let last = strings[strings.length - 1];\n  for (let i = 0; i < first.length; i++) {\n    if (first[i] !== last[i]) {\n      return i;\n    }\n  }\n  return 0;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {AriaDatePickerProps, AriaDateRangePickerProps, DateValue} from '@react-types/datepicker';\nimport {AriaDialogProps} from '@react-types/dialog';\nimport {createFocusManager} from '@react-aria/focus';\nimport {DateRangePickerState} from '@react-stately/datepicker';\nimport {DOMAttributes} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useDescription, useId} from '@react-aria/utils';\nimport {focusManagerSymbol, roleSymbol} from './useDateField';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {RangeCalendarProps} from '@react-types/calendar';\nimport {RefObject, useMemo} from 'react';\nimport {useDatePickerGroup} from './useDatePickerGroup';\nimport {useField} from '@react-aria/label';\nimport {useLocale, useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface DateRangePickerAria {\n  /** Props for the date range picker's visible label element, if any. */\n  labelProps: DOMAttributes,\n  /** Props for the grouping element containing the date fields and button. */\n  groupProps: DOMAttributes,\n  /** Props for the start date field. */\n  startFieldProps: AriaDatePickerProps<DateValue>,\n  /** Props for the end date field. */\n  endFieldProps: AriaDatePickerProps<DateValue>,\n  /** Props for the popover trigger button. */\n  buttonProps: AriaButtonProps,\n  /** Props for the description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the error message element, if any. */\n  errorMessageProps: DOMAttributes,\n  /** Props for the popover dialog. */\n  dialogProps: AriaDialogProps,\n  /** Props for the range calendar within the popover dialog. */\n  calendarProps: RangeCalendarProps<DateValue>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a date picker component.\n * A date range picker combines two DateFields and a RangeCalendar popover to allow\n * users to enter or select a date and time range.\n */\nexport function useDateRangePicker<T extends DateValue>(props: AriaDateRangePickerProps<T>, state: DateRangePickerState, ref: RefObject<Element>): DateRangePickerAria {\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n  let {labelProps, fieldProps, descriptionProps, errorMessageProps} = useField({\n    ...props,\n    labelElementType: 'span'\n  });\n\n  let labelledBy = fieldProps['aria-labelledby'] || fieldProps.id;\n\n  let {locale} = useLocale();\n  let range = state.formatValue(locale, {month: 'long'});\n  let description = range ? stringFormatter.format('selectedRangeDescription', {startDate: range.start, endDate: range.end}) : '';\n  let descProps = useDescription(description);\n\n  let startFieldProps = {\n    'aria-label': stringFormatter.format('startDate'),\n    'aria-labelledby': labelledBy\n  };\n\n  let endFieldProps = {\n    'aria-label': stringFormatter.format('endDate'),\n    'aria-labelledby': labelledBy\n  };\n\n  let buttonId = useId();\n  let dialogId = useId();\n\n  let groupProps = useDatePickerGroup(state, ref);\n\n  let ariaDescribedBy = [descProps['aria-describedby'], fieldProps['aria-describedby']].filter(Boolean).join(' ') || undefined;\n  let focusManager = useMemo(() => createFocusManager(ref, {\n    // Exclude the button from the focus manager.\n    accept: element => element.id !== buttonId\n  }), [ref, buttonId]);\n\n  let commonFieldProps = {\n    [focusManagerSymbol]: focusManager,\n    [roleSymbol]: 'presentation',\n    'aria-describedby': ariaDescribedBy,\n    minValue: props.minValue,\n    maxValue: props.maxValue,\n    placeholderValue: props.placeholderValue,\n    hideTimeZone: props.hideTimeZone,\n    hourCycle: props.hourCycle,\n    granularity: props.granularity,\n    isDisabled: props.isDisabled,\n    isReadOnly: props.isReadOnly,\n    isRequired: props.isRequired,\n    validationState: state.validationState\n  };\n\n  let domProps = filterDOMProps(props);\n\n  return {\n    groupProps: mergeProps(domProps, groupProps, fieldProps, descProps, {\n      role: 'group',\n      'aria-disabled': props.isDisabled || null,\n      'aria-describedby': ariaDescribedBy\n    }),\n    labelProps: {\n      ...labelProps,\n      onClick: () => {\n        focusManager.focusFirst();\n      }\n    },\n    buttonProps: {\n      ...descProps,\n      id: buttonId,\n      'aria-haspopup': 'dialog',\n      'aria-label': stringFormatter.format('calendar'),\n      'aria-labelledby': `${labelledBy} ${buttonId}`,\n      'aria-describedby': ariaDescribedBy,\n      onPress: () => state.setOpen(true)\n    },\n    dialogProps: {\n      id: dialogId,\n      'aria-labelledby': `${labelledBy} ${buttonId}`\n    },\n    startFieldProps: {\n      ...startFieldProps,\n      ...commonFieldProps,\n      value: state.value?.start,\n      onChange: start => state.setDateTime('start', start),\n      autoFocus: props.autoFocus\n    },\n    endFieldProps: {\n      ...endFieldProps,\n      ...commonFieldProps,\n      value: state.value?.end,\n      onChange: end => state.setDateTime('end', end)\n    },\n    descriptionProps,\n    errorMessageProps,\n    calendarProps: {\n      autoFocus: true,\n      value: state.dateRange,\n      onChange: state.setDateRange,\n      minValue: props.minValue,\n      maxValue: props.maxValue,\n      isDisabled: props.isDisabled,\n      isReadOnly: props.isReadOnly,\n      isDateUnavailable: props.isDateUnavailable,\n      allowsNonContiguousRanges: props.allowsNonContiguousRanges,\n      defaultFocusedValue: state.dateRange ? undefined : props.placeholderValue,\n      validationState: state.validationState,\n      errorMessage: props.errorMessage\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}